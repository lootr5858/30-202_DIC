// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _sha256_final_HH_
#define _sha256_final_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "sha256_transform.h"

namespace ap_rtl {

struct sha256_final : public sc_module {
    // Port declarations 55
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<5> > final_hash_address0;
    sc_out< sc_logic > final_hash_ce0;
    sc_out< sc_logic > final_hash_we0;
    sc_out< sc_lv<8> > final_hash_d0;
    sc_out< sc_lv<5> > final_hash_address1;
    sc_out< sc_logic > final_hash_ce1;
    sc_out< sc_logic > final_hash_we1;
    sc_out< sc_lv<8> > final_hash_d1;
    sc_in< sc_lv<32> > ctx_datalen;
    sc_out< sc_lv<6> > ctx_in_data_address0;
    sc_out< sc_logic > ctx_in_data_ce0;
    sc_out< sc_logic > ctx_in_data_we0;
    sc_out< sc_lv<8> > ctx_in_data_d0;
    sc_in< sc_lv<8> > ctx_in_data_q0;
    sc_out< sc_lv<6> > ctx_in_data_address1;
    sc_out< sc_logic > ctx_in_data_ce1;
    sc_out< sc_logic > ctx_in_data_we1;
    sc_out< sc_lv<8> > ctx_in_data_d1;
    sc_in< sc_lv<8> > ctx_in_data_q1;
    sc_in< sc_lv<32> > ctx_state_0_i;
    sc_out< sc_lv<32> > ctx_state_0_o;
    sc_out< sc_logic > ctx_state_0_o_ap_vld;
    sc_in< sc_lv<32> > ctx_state_1_i;
    sc_out< sc_lv<32> > ctx_state_1_o;
    sc_out< sc_logic > ctx_state_1_o_ap_vld;
    sc_in< sc_lv<32> > ctx_state_2_i;
    sc_out< sc_lv<32> > ctx_state_2_o;
    sc_out< sc_logic > ctx_state_2_o_ap_vld;
    sc_in< sc_lv<32> > ctx_state_3_i;
    sc_out< sc_lv<32> > ctx_state_3_o;
    sc_out< sc_logic > ctx_state_3_o_ap_vld;
    sc_in< sc_lv<32> > ctx_state_4_i;
    sc_out< sc_lv<32> > ctx_state_4_o;
    sc_out< sc_logic > ctx_state_4_o_ap_vld;
    sc_in< sc_lv<32> > ctx_state_5_i;
    sc_out< sc_lv<32> > ctx_state_5_o;
    sc_out< sc_logic > ctx_state_5_o_ap_vld;
    sc_in< sc_lv<32> > ctx_state_6_i;
    sc_out< sc_lv<32> > ctx_state_6_o;
    sc_out< sc_logic > ctx_state_6_o_ap_vld;
    sc_in< sc_lv<32> > ctx_state_7_i;
    sc_out< sc_lv<32> > ctx_state_7_o;
    sc_out< sc_logic > ctx_state_7_o_ap_vld;
    sc_in< sc_lv<32> > ctx_bitlen_0_i;
    sc_out< sc_lv<32> > ctx_bitlen_0_o;
    sc_out< sc_logic > ctx_bitlen_0_o_ap_vld;
    sc_in< sc_lv<32> > ctx_bitlen_1_i;
    sc_out< sc_lv<32> > ctx_bitlen_1_o;
    sc_out< sc_logic > ctx_bitlen_1_o_ap_vld;


    // Module declarations
    sha256_final(sc_module_name name);
    SC_HAS_PROCESS(sha256_final);

    ~sha256_final();

    sc_trace_file* mVcdFile;

    sha256_transform* grp_sha256_transform_fu_295;
    sc_signal< sc_lv<14> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > tmp_fu_324_p2;
    sc_signal< sc_lv<1> > tmp_reg_790;
    sc_signal< sc_lv<32> > i_1_fu_330_p2;
    sc_signal< sc_lv<1> > ap_CS_fsm_state2;
    sc_signal< sc_lv<6> > j_2_fu_364_p2;
    sc_signal< sc_lv<1> > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > tmp_s_fu_358_p2;
    sc_signal< sc_lv<32> > tmp_68_fu_408_p2;
    sc_signal< sc_lv<1> > tmp_67_fu_398_p2;
    sc_signal< sc_lv<8> > tmp_72_reg_823;
    sc_signal< sc_lv<8> > tmp_73_reg_828;
    sc_signal< sc_lv<32> > i_5_fu_510_p2;
    sc_signal< sc_lv<1> > ap_CS_fsm_state5;
    sc_signal< sc_lv<8> > tmp_93_fu_523_p1;
    sc_signal< sc_lv<8> > tmp_93_reg_841;
    sc_signal< sc_lv<1> > ap_CS_fsm_state6;
    sc_signal< sc_lv<8> > tmp_74_reg_846;
    sc_signal< sc_lv<8> > tmp_76_reg_851;
    sc_signal< sc_lv<8> > tmp_77_reg_856;
    sc_signal< sc_lv<32> > i_2_cast2_fu_557_p1;
    sc_signal< sc_lv<32> > i_2_cast2_reg_861;
    sc_signal< sc_lv<1> > ap_CS_fsm_state11;
    sc_signal< sc_lv<5> > i_2_cast1_fu_561_p1;
    sc_signal< sc_lv<5> > i_2_cast1_reg_866;
    sc_signal< sc_lv<3> > i_6_fu_571_p2;
    sc_signal< sc_lv<3> > i_6_reg_874;
    sc_signal< sc_lv<32> > tmp_103_cast_fu_595_p1;
    sc_signal< sc_lv<32> > tmp_103_cast_reg_879;
    sc_signal< sc_lv<1> > tmp_78_fu_565_p2;
    sc_signal< sc_lv<3> > sum2_fu_614_p2;
    sc_signal< sc_lv<3> > sum2_reg_889;
    sc_signal< sc_lv<4> > sum1_fu_640_p3;
    sc_signal< sc_lv<4> > sum1_reg_895;
    sc_signal< sc_lv<8> > tmp_103_fu_749_p1;
    sc_signal< sc_lv<8> > tmp_103_reg_900;
    sc_signal< sc_lv<1> > ap_CS_fsm_state13;
    sc_signal< sc_lv<8> > tmp_104_fu_762_p1;
    sc_signal< sc_lv<8> > tmp_104_reg_905;
    sc_signal< sc_logic > grp_sha256_transform_fu_295_ap_start;
    sc_signal< sc_logic > grp_sha256_transform_fu_295_ap_done;
    sc_signal< sc_logic > grp_sha256_transform_fu_295_ap_idle;
    sc_signal< sc_logic > grp_sha256_transform_fu_295_ap_ready;
    sc_signal< sc_lv<6> > grp_sha256_transform_fu_295_data_transform_address0;
    sc_signal< sc_logic > grp_sha256_transform_fu_295_data_transform_ce0;
    sc_signal< sc_lv<6> > grp_sha256_transform_fu_295_data_transform_address1;
    sc_signal< sc_logic > grp_sha256_transform_fu_295_data_transform_ce1;
    sc_signal< sc_lv<32> > grp_sha256_transform_fu_295_ctx_state_0_o;
    sc_signal< sc_logic > grp_sha256_transform_fu_295_ctx_state_0_o_ap_vld;
    sc_signal< sc_lv<32> > grp_sha256_transform_fu_295_ctx_state_1_o;
    sc_signal< sc_logic > grp_sha256_transform_fu_295_ctx_state_1_o_ap_vld;
    sc_signal< sc_lv<32> > grp_sha256_transform_fu_295_ctx_state_2_o;
    sc_signal< sc_logic > grp_sha256_transform_fu_295_ctx_state_2_o_ap_vld;
    sc_signal< sc_lv<32> > grp_sha256_transform_fu_295_ctx_state_3_o;
    sc_signal< sc_logic > grp_sha256_transform_fu_295_ctx_state_3_o_ap_vld;
    sc_signal< sc_lv<32> > grp_sha256_transform_fu_295_ctx_state_4_o;
    sc_signal< sc_logic > grp_sha256_transform_fu_295_ctx_state_4_o_ap_vld;
    sc_signal< sc_lv<32> > grp_sha256_transform_fu_295_ctx_state_5_o;
    sc_signal< sc_logic > grp_sha256_transform_fu_295_ctx_state_5_o_ap_vld;
    sc_signal< sc_lv<32> > grp_sha256_transform_fu_295_ctx_state_6_o;
    sc_signal< sc_logic > grp_sha256_transform_fu_295_ctx_state_6_o_ap_vld;
    sc_signal< sc_lv<32> > grp_sha256_transform_fu_295_ctx_state_7_o;
    sc_signal< sc_logic > grp_sha256_transform_fu_295_ctx_state_7_o_ap_vld;
    sc_signal< sc_lv<32> > i_1_in_reg_245;
    sc_signal< sc_lv<1> > icmp_fu_347_p2;
    sc_signal< sc_lv<6> > j_reg_254;
    sc_signal< sc_lv<1> > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > i_0_in_reg_265;
    sc_signal< sc_lv<1> > exitcond_fu_517_p2;
    sc_signal< sc_lv<32> > ctx_bitlen_1_loc_reg_274;
    sc_signal< sc_lv<3> > i_2_reg_283;
    sc_signal< sc_lv<1> > ap_CS_fsm_state10;
    sc_signal< sc_lv<1> > ap_CS_fsm_state14;
    sc_signal< sc_logic > ap_reg_grp_sha256_transform_fu_295_ap_start;
    sc_signal< sc_lv<1> > ap_CS_fsm_state9;
    sc_signal< sc_lv<32> > j_cast5_fu_353_p1;
    sc_signal< sc_lv<32> > sum2_cast_fu_620_p1;
    sc_signal< sc_lv<32> > sum4_cast_fu_648_p1;
    sc_signal< sc_lv<1> > ap_CS_fsm_state12;
    sc_signal< sc_lv<32> > sum6_cast_fu_684_p1;
    sc_signal< sc_lv<32> > sum8_cast_fu_711_p1;
    sc_signal< sc_lv<32> > sum_cast_fu_735_p1;
    sc_signal< sc_lv<32> > sum1_cast_fu_769_p1;
    sc_signal< sc_lv<32> > sum3_cast_fu_777_p1;
    sc_signal< sc_lv<32> > tmp_69_fu_448_p2;
    sc_signal< sc_lv<8> > tmp_70_fu_472_p2;
    sc_signal< sc_lv<1> > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > ap_CS_fsm_state8;
    sc_signal< sc_lv<8> > tmp_98_fu_609_p1;
    sc_signal< sc_lv<8> > tmp_99_fu_635_p1;
    sc_signal< sc_lv<8> > tmp_97_fu_662_p1;
    sc_signal< sc_lv<8> > tmp_100_fu_676_p1;
    sc_signal< sc_lv<8> > tmp_101_fu_698_p1;
    sc_signal< sc_lv<8> > tmp_102_fu_725_p1;
    sc_signal< sc_lv<26> > tmp_75_fu_337_p4;
    sc_signal< sc_lv<6> > tmp_83_fu_374_p1;
    sc_signal< sc_lv<9> > tmp_65_fu_380_p3;
    sc_signal< sc_lv<32> > tmp_82_cast_fu_388_p1;
    sc_signal< sc_lv<32> > tmp_66_fu_392_p2;
    sc_signal< sc_lv<5> > tmp_85_fu_377_p1;
    sc_signal< sc_lv<24> > tmp_91_fu_440_p1;
    sc_signal< sc_lv<24> > tmp_17_fu_444_p1;
    sc_signal< sc_lv<16> > tmp_89_fu_432_p1;
    sc_signal< sc_lv<16> > tmp_15_fu_436_p1;
    sc_signal< sc_lv<8> > tmp_87_fu_428_p1;
    sc_signal< sc_lv<8> > tmp_12_fu_420_p3;
    sc_signal< sc_lv<16> > tmp_86_cast_fu_460_p2;
    sc_signal< sc_lv<24> > tmp_86_cast3_fu_454_p2;
    sc_signal< sc_lv<2> > tmp_95_fu_577_p1;
    sc_signal< sc_lv<5> > tmp_79_fu_581_p3;
    sc_signal< sc_lv<5> > tmp_80_fu_589_p2;
    sc_signal< sc_lv<32> > tmp_82_fu_603_p2;
    sc_signal< sc_lv<32> > tmp_84_fu_629_p2;
    sc_signal< sc_lv<32> > tmp_81_fu_657_p2;
    sc_signal< sc_lv<32> > tmp_86_fu_671_p2;
    sc_signal< sc_lv<4> > sum6_cast8_fu_681_p1;
    sc_signal< sc_lv<32> > tmp_88_fu_693_p2;
    sc_signal< sc_lv<5> > sum4_fu_703_p3;
    sc_signal< sc_lv<32> > tmp_90_fu_720_p2;
    sc_signal< sc_lv<5> > sum_fu_730_p2;
    sc_signal< sc_lv<32> > tmp_92_fu_744_p2;
    sc_signal< sc_lv<32> > tmp_94_fu_757_p2;
    sc_signal< sc_lv<5> > sum1_cast7_fu_766_p1;
    sc_signal< sc_lv<5> > sum3_cast6_fu_774_p1;
    sc_signal< sc_lv<14> > ap_NS_fsm;
    sc_signal< bool > ap_condition_132;
    sc_signal< bool > ap_condition_260;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<14> ap_ST_fsm_state1;
    static const sc_lv<14> ap_ST_fsm_state2;
    static const sc_lv<14> ap_ST_fsm_state3;
    static const sc_lv<14> ap_ST_fsm_state4;
    static const sc_lv<14> ap_ST_fsm_state5;
    static const sc_lv<14> ap_ST_fsm_state6;
    static const sc_lv<14> ap_ST_fsm_state7;
    static const sc_lv<14> ap_ST_fsm_state8;
    static const sc_lv<14> ap_ST_fsm_state9;
    static const sc_lv<14> ap_ST_fsm_state10;
    static const sc_lv<14> ap_ST_fsm_state11;
    static const sc_lv<14> ap_ST_fsm_state12;
    static const sc_lv<14> ap_ST_fsm_state13;
    static const sc_lv<14> ap_ST_fsm_state14;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<8> ap_const_lv8_80;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<6> ap_const_lv6_3F;
    static const sc_lv<6> ap_const_lv6_3E;
    static const sc_lv<6> ap_const_lv6_3D;
    static const sc_lv<6> ap_const_lv6_3C;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<6> ap_const_lv6_3B;
    static const sc_lv<6> ap_const_lv6_3A;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<6> ap_const_lv6_39;
    static const sc_lv<6> ap_const_lv6_38;
    static const sc_lv<32> ap_const_lv32_38;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<26> ap_const_lv26_0;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_37;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<5> ap_const_lv5_18;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<5> ap_const_lv5_14;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_condition_132();
    void thread_ap_condition_260();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ctx_bitlen_0_o();
    void thread_ctx_bitlen_0_o_ap_vld();
    void thread_ctx_bitlen_1_o();
    void thread_ctx_bitlen_1_o_ap_vld();
    void thread_ctx_in_data_address0();
    void thread_ctx_in_data_address1();
    void thread_ctx_in_data_ce0();
    void thread_ctx_in_data_ce1();
    void thread_ctx_in_data_d0();
    void thread_ctx_in_data_d1();
    void thread_ctx_in_data_we0();
    void thread_ctx_in_data_we1();
    void thread_ctx_state_0_o();
    void thread_ctx_state_0_o_ap_vld();
    void thread_ctx_state_1_o();
    void thread_ctx_state_1_o_ap_vld();
    void thread_ctx_state_2_o();
    void thread_ctx_state_2_o_ap_vld();
    void thread_ctx_state_3_o();
    void thread_ctx_state_3_o_ap_vld();
    void thread_ctx_state_4_o();
    void thread_ctx_state_4_o_ap_vld();
    void thread_ctx_state_5_o();
    void thread_ctx_state_5_o_ap_vld();
    void thread_ctx_state_6_o();
    void thread_ctx_state_6_o_ap_vld();
    void thread_ctx_state_7_o();
    void thread_ctx_state_7_o_ap_vld();
    void thread_exitcond_fu_517_p2();
    void thread_final_hash_address0();
    void thread_final_hash_address1();
    void thread_final_hash_ce0();
    void thread_final_hash_ce1();
    void thread_final_hash_d0();
    void thread_final_hash_d1();
    void thread_final_hash_we0();
    void thread_final_hash_we1();
    void thread_grp_sha256_transform_fu_295_ap_start();
    void thread_i_1_fu_330_p2();
    void thread_i_2_cast1_fu_561_p1();
    void thread_i_2_cast2_fu_557_p1();
    void thread_i_5_fu_510_p2();
    void thread_i_6_fu_571_p2();
    void thread_icmp_fu_347_p2();
    void thread_j_2_fu_364_p2();
    void thread_j_cast5_fu_353_p1();
    void thread_sum1_cast7_fu_766_p1();
    void thread_sum1_cast_fu_769_p1();
    void thread_sum1_fu_640_p3();
    void thread_sum2_cast_fu_620_p1();
    void thread_sum2_fu_614_p2();
    void thread_sum3_cast6_fu_774_p1();
    void thread_sum3_cast_fu_777_p1();
    void thread_sum4_cast_fu_648_p1();
    void thread_sum4_fu_703_p3();
    void thread_sum6_cast8_fu_681_p1();
    void thread_sum6_cast_fu_684_p1();
    void thread_sum8_cast_fu_711_p1();
    void thread_sum_cast_fu_735_p1();
    void thread_sum_fu_730_p2();
    void thread_tmp_100_fu_676_p1();
    void thread_tmp_101_fu_698_p1();
    void thread_tmp_102_fu_725_p1();
    void thread_tmp_103_cast_fu_595_p1();
    void thread_tmp_103_fu_749_p1();
    void thread_tmp_104_fu_762_p1();
    void thread_tmp_12_fu_420_p3();
    void thread_tmp_15_fu_436_p1();
    void thread_tmp_17_fu_444_p1();
    void thread_tmp_65_fu_380_p3();
    void thread_tmp_66_fu_392_p2();
    void thread_tmp_67_fu_398_p2();
    void thread_tmp_68_fu_408_p2();
    void thread_tmp_69_fu_448_p2();
    void thread_tmp_70_fu_472_p2();
    void thread_tmp_75_fu_337_p4();
    void thread_tmp_78_fu_565_p2();
    void thread_tmp_79_fu_581_p3();
    void thread_tmp_80_fu_589_p2();
    void thread_tmp_81_fu_657_p2();
    void thread_tmp_82_cast_fu_388_p1();
    void thread_tmp_82_fu_603_p2();
    void thread_tmp_83_fu_374_p1();
    void thread_tmp_84_fu_629_p2();
    void thread_tmp_85_fu_377_p1();
    void thread_tmp_86_cast3_fu_454_p2();
    void thread_tmp_86_cast_fu_460_p2();
    void thread_tmp_86_fu_671_p2();
    void thread_tmp_87_fu_428_p1();
    void thread_tmp_88_fu_693_p2();
    void thread_tmp_89_fu_432_p1();
    void thread_tmp_90_fu_720_p2();
    void thread_tmp_91_fu_440_p1();
    void thread_tmp_92_fu_744_p2();
    void thread_tmp_93_fu_523_p1();
    void thread_tmp_94_fu_757_p2();
    void thread_tmp_95_fu_577_p1();
    void thread_tmp_97_fu_662_p1();
    void thread_tmp_98_fu_609_p1();
    void thread_tmp_99_fu_635_p1();
    void thread_tmp_fu_324_p2();
    void thread_tmp_s_fu_358_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
