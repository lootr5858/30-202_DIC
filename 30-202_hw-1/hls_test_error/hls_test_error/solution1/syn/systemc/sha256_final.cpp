// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "sha256_final.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic sha256_final::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic sha256_final::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<14> sha256_final::ap_ST_fsm_state1 = "1";
const sc_lv<14> sha256_final::ap_ST_fsm_state2 = "10";
const sc_lv<14> sha256_final::ap_ST_fsm_state3 = "100";
const sc_lv<14> sha256_final::ap_ST_fsm_state4 = "1000";
const sc_lv<14> sha256_final::ap_ST_fsm_state5 = "10000";
const sc_lv<14> sha256_final::ap_ST_fsm_state6 = "100000";
const sc_lv<14> sha256_final::ap_ST_fsm_state7 = "1000000";
const sc_lv<14> sha256_final::ap_ST_fsm_state8 = "10000000";
const sc_lv<14> sha256_final::ap_ST_fsm_state9 = "100000000";
const sc_lv<14> sha256_final::ap_ST_fsm_state10 = "1000000000";
const sc_lv<14> sha256_final::ap_ST_fsm_state11 = "10000000000";
const sc_lv<14> sha256_final::ap_ST_fsm_state12 = "100000000000";
const sc_lv<14> sha256_final::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<14> sha256_final::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<32> sha256_final::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> sha256_final::ap_const_lv1_1 = "1";
const sc_lv<32> sha256_final::ap_const_lv32_1 = "1";
const sc_lv<32> sha256_final::ap_const_lv32_3 = "11";
const sc_lv<1> sha256_final::ap_const_lv1_0 = "0";
const sc_lv<32> sha256_final::ap_const_lv32_4 = "100";
const sc_lv<32> sha256_final::ap_const_lv32_5 = "101";
const sc_lv<32> sha256_final::ap_const_lv32_A = "1010";
const sc_lv<32> sha256_final::ap_const_lv32_C = "1100";
const sc_lv<6> sha256_final::ap_const_lv6_0 = "000000";
const sc_lv<32> sha256_final::ap_const_lv32_2 = "10";
const sc_lv<3> sha256_final::ap_const_lv3_0 = "000";
const sc_lv<32> sha256_final::ap_const_lv32_9 = "1001";
const sc_lv<32> sha256_final::ap_const_lv32_D = "1101";
const sc_lv<32> sha256_final::ap_const_lv32_8 = "1000";
const sc_lv<32> sha256_final::ap_const_lv32_B = "1011";
const sc_lv<8> sha256_final::ap_const_lv8_80 = "10000000";
const sc_lv<8> sha256_final::ap_const_lv8_0 = "00000000";
const sc_lv<6> sha256_final::ap_const_lv6_3F = "111111";
const sc_lv<6> sha256_final::ap_const_lv6_3E = "111110";
const sc_lv<6> sha256_final::ap_const_lv6_3D = "111101";
const sc_lv<6> sha256_final::ap_const_lv6_3C = "111100";
const sc_lv<32> sha256_final::ap_const_lv32_6 = "110";
const sc_lv<6> sha256_final::ap_const_lv6_3B = "111011";
const sc_lv<6> sha256_final::ap_const_lv6_3A = "111010";
const sc_lv<32> sha256_final::ap_const_lv32_7 = "111";
const sc_lv<6> sha256_final::ap_const_lv6_39 = "111001";
const sc_lv<6> sha256_final::ap_const_lv6_38 = "111000";
const sc_lv<32> sha256_final::ap_const_lv32_38 = "111000";
const sc_lv<32> sha256_final::ap_const_lv32_1F = "11111";
const sc_lv<26> sha256_final::ap_const_lv26_0 = "00000000000000000000000000";
const sc_lv<6> sha256_final::ap_const_lv6_1 = "1";
const sc_lv<32> sha256_final::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<32> sha256_final::ap_const_lv32_F = "1111";
const sc_lv<32> sha256_final::ap_const_lv32_10 = "10000";
const sc_lv<32> sha256_final::ap_const_lv32_17 = "10111";
const sc_lv<32> sha256_final::ap_const_lv32_18 = "11000";
const sc_lv<32> sha256_final::ap_const_lv32_37 = "110111";
const sc_lv<3> sha256_final::ap_const_lv3_4 = "100";
const sc_lv<3> sha256_final::ap_const_lv3_1 = "1";
const sc_lv<5> sha256_final::ap_const_lv5_18 = "11000";
const sc_lv<2> sha256_final::ap_const_lv2_2 = "10";
const sc_lv<5> sha256_final::ap_const_lv5_14 = "10100";
const bool sha256_final::ap_const_boolean_1 = true;

sha256_final::sha256_final(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_sha256_transform_fu_295 = new sha256_transform("grp_sha256_transform_fu_295");
    grp_sha256_transform_fu_295->ap_clk(ap_clk);
    grp_sha256_transform_fu_295->ap_rst(ap_rst);
    grp_sha256_transform_fu_295->ap_start(grp_sha256_transform_fu_295_ap_start);
    grp_sha256_transform_fu_295->ap_done(grp_sha256_transform_fu_295_ap_done);
    grp_sha256_transform_fu_295->ap_idle(grp_sha256_transform_fu_295_ap_idle);
    grp_sha256_transform_fu_295->ap_ready(grp_sha256_transform_fu_295_ap_ready);
    grp_sha256_transform_fu_295->data_transform_address0(grp_sha256_transform_fu_295_data_transform_address0);
    grp_sha256_transform_fu_295->data_transform_ce0(grp_sha256_transform_fu_295_data_transform_ce0);
    grp_sha256_transform_fu_295->data_transform_q0(ctx_in_data_q0);
    grp_sha256_transform_fu_295->data_transform_address1(grp_sha256_transform_fu_295_data_transform_address1);
    grp_sha256_transform_fu_295->data_transform_ce1(grp_sha256_transform_fu_295_data_transform_ce1);
    grp_sha256_transform_fu_295->data_transform_q1(ctx_in_data_q1);
    grp_sha256_transform_fu_295->ctx_state_0_i(ctx_state_0_i);
    grp_sha256_transform_fu_295->ctx_state_0_o(grp_sha256_transform_fu_295_ctx_state_0_o);
    grp_sha256_transform_fu_295->ctx_state_0_o_ap_vld(grp_sha256_transform_fu_295_ctx_state_0_o_ap_vld);
    grp_sha256_transform_fu_295->ctx_state_1_i(ctx_state_1_i);
    grp_sha256_transform_fu_295->ctx_state_1_o(grp_sha256_transform_fu_295_ctx_state_1_o);
    grp_sha256_transform_fu_295->ctx_state_1_o_ap_vld(grp_sha256_transform_fu_295_ctx_state_1_o_ap_vld);
    grp_sha256_transform_fu_295->ctx_state_2_i(ctx_state_2_i);
    grp_sha256_transform_fu_295->ctx_state_2_o(grp_sha256_transform_fu_295_ctx_state_2_o);
    grp_sha256_transform_fu_295->ctx_state_2_o_ap_vld(grp_sha256_transform_fu_295_ctx_state_2_o_ap_vld);
    grp_sha256_transform_fu_295->ctx_state_3_i(ctx_state_3_i);
    grp_sha256_transform_fu_295->ctx_state_3_o(grp_sha256_transform_fu_295_ctx_state_3_o);
    grp_sha256_transform_fu_295->ctx_state_3_o_ap_vld(grp_sha256_transform_fu_295_ctx_state_3_o_ap_vld);
    grp_sha256_transform_fu_295->ctx_state_4_i(ctx_state_4_i);
    grp_sha256_transform_fu_295->ctx_state_4_o(grp_sha256_transform_fu_295_ctx_state_4_o);
    grp_sha256_transform_fu_295->ctx_state_4_o_ap_vld(grp_sha256_transform_fu_295_ctx_state_4_o_ap_vld);
    grp_sha256_transform_fu_295->ctx_state_5_i(ctx_state_5_i);
    grp_sha256_transform_fu_295->ctx_state_5_o(grp_sha256_transform_fu_295_ctx_state_5_o);
    grp_sha256_transform_fu_295->ctx_state_5_o_ap_vld(grp_sha256_transform_fu_295_ctx_state_5_o_ap_vld);
    grp_sha256_transform_fu_295->ctx_state_6_i(ctx_state_6_i);
    grp_sha256_transform_fu_295->ctx_state_6_o(grp_sha256_transform_fu_295_ctx_state_6_o);
    grp_sha256_transform_fu_295->ctx_state_6_o_ap_vld(grp_sha256_transform_fu_295_ctx_state_6_o_ap_vld);
    grp_sha256_transform_fu_295->ctx_state_7_i(ctx_state_7_i);
    grp_sha256_transform_fu_295->ctx_state_7_o(grp_sha256_transform_fu_295_ctx_state_7_o);
    grp_sha256_transform_fu_295->ctx_state_7_o_ap_vld(grp_sha256_transform_fu_295_ctx_state_7_o_ap_vld);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_condition_132);
    sensitive << ( tmp_reg_790 );
    sensitive << ( tmp_s_fu_358_p2 );
    sensitive << ( tmp_67_fu_398_p2 );

    SC_METHOD(thread_ap_condition_260);
    sensitive << ( tmp_reg_790 );
    sensitive << ( tmp_s_fu_358_p2 );
    sensitive << ( tmp_67_fu_398_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_78_fu_565_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_78_fu_565_p2 );

    SC_METHOD(thread_ctx_bitlen_0_o);
    sensitive << ( ctx_bitlen_0_i );
    sensitive << ( tmp_reg_790 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_s_fu_358_p2 );
    sensitive << ( tmp_69_fu_448_p2 );

    SC_METHOD(thread_ctx_bitlen_0_o_ap_vld);
    sensitive << ( tmp_reg_790 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_s_fu_358_p2 );

    SC_METHOD(thread_ctx_bitlen_1_o);
    sensitive << ( ctx_bitlen_1_i );
    sensitive << ( tmp_reg_790 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_s_fu_358_p2 );
    sensitive << ( tmp_68_fu_408_p2 );
    sensitive << ( tmp_67_fu_398_p2 );

    SC_METHOD(thread_ctx_bitlen_1_o_ap_vld);
    sensitive << ( tmp_reg_790 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_s_fu_358_p2 );
    sensitive << ( tmp_67_fu_398_p2 );

    SC_METHOD(thread_ctx_in_data_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ctx_datalen );
    sensitive << ( tmp_reg_790 );
    sensitive << ( i_1_fu_330_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_s_fu_358_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( grp_sha256_transform_fu_295_data_transform_address0 );
    sensitive << ( icmp_fu_347_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( j_cast5_fu_353_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ctx_in_data_address1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_5_fu_510_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( grp_sha256_transform_fu_295_data_transform_address1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ctx_in_data_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_reg_790 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_s_fu_358_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( grp_sha256_transform_fu_295_data_transform_ce0 );
    sensitive << ( icmp_fu_347_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ctx_in_data_ce1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( grp_sha256_transform_fu_295_data_transform_ce1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ctx_in_data_d0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_reg_790 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_s_fu_358_p2 );
    sensitive << ( tmp_73_reg_828 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_74_reg_846 );
    sensitive << ( tmp_77_reg_856 );
    sensitive << ( icmp_fu_347_p2 );
    sensitive << ( tmp_70_fu_472_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ctx_in_data_d1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_72_reg_823 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_93_reg_841 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_76_reg_851 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_86_cast_fu_460_p2 );

    SC_METHOD(thread_ctx_in_data_we0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_reg_790 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_s_fu_358_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_fu_347_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ctx_in_data_we1);
    sensitive << ( tmp_reg_790 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_s_fu_358_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond_fu_517_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ctx_state_0_o);
    sensitive << ( ctx_state_0_i );
    sensitive << ( grp_sha256_transform_fu_295_ctx_state_0_o );
    sensitive << ( grp_sha256_transform_fu_295_ctx_state_0_o_ap_vld );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_ctx_state_0_o_ap_vld);
    sensitive << ( grp_sha256_transform_fu_295_ctx_state_0_o_ap_vld );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_ctx_state_1_o);
    sensitive << ( ctx_state_1_i );
    sensitive << ( grp_sha256_transform_fu_295_ctx_state_1_o );
    sensitive << ( grp_sha256_transform_fu_295_ctx_state_1_o_ap_vld );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_ctx_state_1_o_ap_vld);
    sensitive << ( grp_sha256_transform_fu_295_ctx_state_1_o_ap_vld );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_ctx_state_2_o);
    sensitive << ( ctx_state_2_i );
    sensitive << ( grp_sha256_transform_fu_295_ctx_state_2_o );
    sensitive << ( grp_sha256_transform_fu_295_ctx_state_2_o_ap_vld );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_ctx_state_2_o_ap_vld);
    sensitive << ( grp_sha256_transform_fu_295_ctx_state_2_o_ap_vld );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_ctx_state_3_o);
    sensitive << ( ctx_state_3_i );
    sensitive << ( grp_sha256_transform_fu_295_ctx_state_3_o );
    sensitive << ( grp_sha256_transform_fu_295_ctx_state_3_o_ap_vld );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_ctx_state_3_o_ap_vld);
    sensitive << ( grp_sha256_transform_fu_295_ctx_state_3_o_ap_vld );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_ctx_state_4_o);
    sensitive << ( ctx_state_4_i );
    sensitive << ( grp_sha256_transform_fu_295_ctx_state_4_o );
    sensitive << ( grp_sha256_transform_fu_295_ctx_state_4_o_ap_vld );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_ctx_state_4_o_ap_vld);
    sensitive << ( grp_sha256_transform_fu_295_ctx_state_4_o_ap_vld );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_ctx_state_5_o);
    sensitive << ( ctx_state_5_i );
    sensitive << ( grp_sha256_transform_fu_295_ctx_state_5_o );
    sensitive << ( grp_sha256_transform_fu_295_ctx_state_5_o_ap_vld );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_ctx_state_5_o_ap_vld);
    sensitive << ( grp_sha256_transform_fu_295_ctx_state_5_o_ap_vld );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_ctx_state_6_o);
    sensitive << ( ctx_state_6_i );
    sensitive << ( grp_sha256_transform_fu_295_ctx_state_6_o );
    sensitive << ( grp_sha256_transform_fu_295_ctx_state_6_o_ap_vld );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_ctx_state_6_o_ap_vld);
    sensitive << ( grp_sha256_transform_fu_295_ctx_state_6_o_ap_vld );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_ctx_state_7_o);
    sensitive << ( ctx_state_7_i );
    sensitive << ( grp_sha256_transform_fu_295_ctx_state_7_o );
    sensitive << ( grp_sha256_transform_fu_295_ctx_state_7_o_ap_vld );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_ctx_state_7_o_ap_vld);
    sensitive << ( grp_sha256_transform_fu_295_ctx_state_7_o_ap_vld );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_exitcond_fu_517_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i_0_in_reg_265 );

    SC_METHOD(thread_final_hash_address0);
    sensitive << ( i_2_cast2_reg_861 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( sum2_cast_fu_620_p1 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( sum8_cast_fu_711_p1 );
    sensitive << ( sum1_cast_fu_769_p1 );

    SC_METHOD(thread_final_hash_address1);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( sum4_cast_fu_648_p1 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( sum6_cast_fu_684_p1 );
    sensitive << ( sum_cast_fu_735_p1 );
    sensitive << ( sum3_cast_fu_777_p1 );

    SC_METHOD(thread_final_hash_ce0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_final_hash_ce1);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_final_hash_d0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_103_reg_900 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_98_fu_609_p1 );
    sensitive << ( tmp_97_fu_662_p1 );
    sensitive << ( tmp_101_fu_698_p1 );

    SC_METHOD(thread_final_hash_d1);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_104_reg_905 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_99_fu_635_p1 );
    sensitive << ( tmp_100_fu_676_p1 );
    sensitive << ( tmp_102_fu_725_p1 );

    SC_METHOD(thread_final_hash_we0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_78_fu_565_p2 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_final_hash_we1);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_78_fu_565_p2 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_grp_sha256_transform_fu_295_ap_start);
    sensitive << ( ap_reg_grp_sha256_transform_fu_295_ap_start );

    SC_METHOD(thread_i_1_fu_330_p2);
    sensitive << ( i_1_in_reg_245 );

    SC_METHOD(thread_i_2_cast1_fu_561_p1);
    sensitive << ( i_2_reg_283 );

    SC_METHOD(thread_i_2_cast2_fu_557_p1);
    sensitive << ( i_2_reg_283 );

    SC_METHOD(thread_i_5_fu_510_p2);
    sensitive << ( i_0_in_reg_265 );

    SC_METHOD(thread_i_6_fu_571_p2);
    sensitive << ( i_2_reg_283 );

    SC_METHOD(thread_icmp_fu_347_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_75_fu_337_p4 );

    SC_METHOD(thread_j_2_fu_364_p2);
    sensitive << ( j_reg_254 );

    SC_METHOD(thread_j_cast5_fu_353_p1);
    sensitive << ( j_reg_254 );

    SC_METHOD(thread_sum1_cast7_fu_766_p1);
    sensitive << ( sum1_reg_895 );

    SC_METHOD(thread_sum1_cast_fu_769_p1);
    sensitive << ( sum1_cast7_fu_766_p1 );

    SC_METHOD(thread_sum1_fu_640_p3);
    sensitive << ( i_2_reg_283 );

    SC_METHOD(thread_sum2_cast_fu_620_p1);
    sensitive << ( sum2_fu_614_p2 );

    SC_METHOD(thread_sum2_fu_614_p2);
    sensitive << ( i_2_reg_283 );

    SC_METHOD(thread_sum3_cast6_fu_774_p1);
    sensitive << ( sum2_reg_889 );

    SC_METHOD(thread_sum3_cast_fu_777_p1);
    sensitive << ( sum3_cast6_fu_774_p1 );

    SC_METHOD(thread_sum4_cast_fu_648_p1);
    sensitive << ( sum1_fu_640_p3 );

    SC_METHOD(thread_sum4_fu_703_p3);
    sensitive << ( i_2_reg_283 );

    SC_METHOD(thread_sum6_cast8_fu_681_p1);
    sensitive << ( sum2_reg_889 );

    SC_METHOD(thread_sum6_cast_fu_684_p1);
    sensitive << ( sum6_cast8_fu_681_p1 );

    SC_METHOD(thread_sum8_cast_fu_711_p1);
    sensitive << ( sum4_fu_703_p3 );

    SC_METHOD(thread_sum_cast_fu_735_p1);
    sensitive << ( sum_fu_730_p2 );

    SC_METHOD(thread_sum_fu_730_p2);
    sensitive << ( i_2_cast1_reg_866 );

    SC_METHOD(thread_tmp_100_fu_676_p1);
    sensitive << ( tmp_86_fu_671_p2 );

    SC_METHOD(thread_tmp_101_fu_698_p1);
    sensitive << ( tmp_88_fu_693_p2 );

    SC_METHOD(thread_tmp_102_fu_725_p1);
    sensitive << ( tmp_90_fu_720_p2 );

    SC_METHOD(thread_tmp_103_cast_fu_595_p1);
    sensitive << ( tmp_80_fu_589_p2 );

    SC_METHOD(thread_tmp_103_fu_749_p1);
    sensitive << ( tmp_92_fu_744_p2 );

    SC_METHOD(thread_tmp_104_fu_762_p1);
    sensitive << ( tmp_94_fu_757_p2 );

    SC_METHOD(thread_tmp_12_fu_420_p3);
    sensitive << ( tmp_85_fu_377_p1 );

    SC_METHOD(thread_tmp_15_fu_436_p1);
    sensitive << ( tmp_65_fu_380_p3 );

    SC_METHOD(thread_tmp_17_fu_444_p1);
    sensitive << ( tmp_65_fu_380_p3 );

    SC_METHOD(thread_tmp_65_fu_380_p3);
    sensitive << ( tmp_83_fu_374_p1 );

    SC_METHOD(thread_tmp_66_fu_392_p2);
    sensitive << ( tmp_82_cast_fu_388_p1 );

    SC_METHOD(thread_tmp_67_fu_398_p2);
    sensitive << ( ctx_bitlen_0_i );
    sensitive << ( tmp_reg_790 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_s_fu_358_p2 );
    sensitive << ( tmp_66_fu_392_p2 );

    SC_METHOD(thread_tmp_68_fu_408_p2);
    sensitive << ( ctx_bitlen_1_i );

    SC_METHOD(thread_tmp_69_fu_448_p2);
    sensitive << ( ctx_bitlen_0_i );
    sensitive << ( tmp_82_cast_fu_388_p1 );

    SC_METHOD(thread_tmp_70_fu_472_p2);
    sensitive << ( tmp_87_fu_428_p1 );
    sensitive << ( tmp_12_fu_420_p3 );

    SC_METHOD(thread_tmp_75_fu_337_p4);
    sensitive << ( i_1_fu_330_p2 );

    SC_METHOD(thread_tmp_78_fu_565_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( i_2_reg_283 );

    SC_METHOD(thread_tmp_79_fu_581_p3);
    sensitive << ( tmp_95_fu_577_p1 );

    SC_METHOD(thread_tmp_80_fu_589_p2);
    sensitive << ( tmp_79_fu_581_p3 );

    SC_METHOD(thread_tmp_81_fu_657_p2);
    sensitive << ( ctx_state_0_i );
    sensitive << ( tmp_103_cast_reg_879 );

    SC_METHOD(thread_tmp_82_cast_fu_388_p1);
    sensitive << ( tmp_65_fu_380_p3 );

    SC_METHOD(thread_tmp_82_fu_603_p2);
    sensitive << ( ctx_state_1_i );
    sensitive << ( tmp_103_cast_fu_595_p1 );

    SC_METHOD(thread_tmp_83_fu_374_p1);
    sensitive << ( ctx_datalen );

    SC_METHOD(thread_tmp_84_fu_629_p2);
    sensitive << ( ctx_state_2_i );
    sensitive << ( tmp_103_cast_fu_595_p1 );

    SC_METHOD(thread_tmp_85_fu_377_p1);
    sensitive << ( ctx_datalen );

    SC_METHOD(thread_tmp_86_cast3_fu_454_p2);
    sensitive << ( tmp_91_fu_440_p1 );
    sensitive << ( tmp_17_fu_444_p1 );

    SC_METHOD(thread_tmp_86_cast_fu_460_p2);
    sensitive << ( tmp_89_fu_432_p1 );
    sensitive << ( tmp_15_fu_436_p1 );

    SC_METHOD(thread_tmp_86_fu_671_p2);
    sensitive << ( ctx_state_3_i );
    sensitive << ( tmp_103_cast_reg_879 );

    SC_METHOD(thread_tmp_87_fu_428_p1);
    sensitive << ( ctx_bitlen_0_i );

    SC_METHOD(thread_tmp_88_fu_693_p2);
    sensitive << ( ctx_state_4_i );
    sensitive << ( tmp_103_cast_reg_879 );

    SC_METHOD(thread_tmp_89_fu_432_p1);
    sensitive << ( ctx_bitlen_0_i );

    SC_METHOD(thread_tmp_90_fu_720_p2);
    sensitive << ( ctx_state_5_i );
    sensitive << ( tmp_103_cast_reg_879 );

    SC_METHOD(thread_tmp_91_fu_440_p1);
    sensitive << ( ctx_bitlen_0_i );

    SC_METHOD(thread_tmp_92_fu_744_p2);
    sensitive << ( ctx_state_6_i );
    sensitive << ( tmp_103_cast_reg_879 );

    SC_METHOD(thread_tmp_93_fu_523_p1);
    sensitive << ( ctx_bitlen_1_loc_reg_274 );

    SC_METHOD(thread_tmp_94_fu_757_p2);
    sensitive << ( ctx_state_7_i );
    sensitive << ( tmp_103_cast_reg_879 );

    SC_METHOD(thread_tmp_95_fu_577_p1);
    sensitive << ( i_2_reg_283 );

    SC_METHOD(thread_tmp_97_fu_662_p1);
    sensitive << ( tmp_81_fu_657_p2 );

    SC_METHOD(thread_tmp_98_fu_609_p1);
    sensitive << ( tmp_82_fu_603_p2 );

    SC_METHOD(thread_tmp_99_fu_635_p1);
    sensitive << ( tmp_84_fu_629_p2 );

    SC_METHOD(thread_tmp_fu_324_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ctx_datalen );

    SC_METHOD(thread_tmp_s_fu_358_p2);
    sensitive << ( tmp_reg_790 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( j_reg_254 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_fu_324_p2 );
    sensitive << ( tmp_reg_790 );
    sensitive << ( tmp_s_fu_358_p2 );
    sensitive << ( tmp_78_fu_565_p2 );
    sensitive << ( grp_sha256_transform_fu_295_ap_done );
    sensitive << ( icmp_fu_347_p2 );
    sensitive << ( exitcond_fu_517_p2 );

    ap_CS_fsm = "00000000000001";
    ap_reg_grp_sha256_transform_fu_295_ap_start = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "sha256_final_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, final_hash_address0, "(port)final_hash_address0");
    sc_trace(mVcdFile, final_hash_ce0, "(port)final_hash_ce0");
    sc_trace(mVcdFile, final_hash_we0, "(port)final_hash_we0");
    sc_trace(mVcdFile, final_hash_d0, "(port)final_hash_d0");
    sc_trace(mVcdFile, final_hash_address1, "(port)final_hash_address1");
    sc_trace(mVcdFile, final_hash_ce1, "(port)final_hash_ce1");
    sc_trace(mVcdFile, final_hash_we1, "(port)final_hash_we1");
    sc_trace(mVcdFile, final_hash_d1, "(port)final_hash_d1");
    sc_trace(mVcdFile, ctx_datalen, "(port)ctx_datalen");
    sc_trace(mVcdFile, ctx_in_data_address0, "(port)ctx_in_data_address0");
    sc_trace(mVcdFile, ctx_in_data_ce0, "(port)ctx_in_data_ce0");
    sc_trace(mVcdFile, ctx_in_data_we0, "(port)ctx_in_data_we0");
    sc_trace(mVcdFile, ctx_in_data_d0, "(port)ctx_in_data_d0");
    sc_trace(mVcdFile, ctx_in_data_q0, "(port)ctx_in_data_q0");
    sc_trace(mVcdFile, ctx_in_data_address1, "(port)ctx_in_data_address1");
    sc_trace(mVcdFile, ctx_in_data_ce1, "(port)ctx_in_data_ce1");
    sc_trace(mVcdFile, ctx_in_data_we1, "(port)ctx_in_data_we1");
    sc_trace(mVcdFile, ctx_in_data_d1, "(port)ctx_in_data_d1");
    sc_trace(mVcdFile, ctx_in_data_q1, "(port)ctx_in_data_q1");
    sc_trace(mVcdFile, ctx_state_0_i, "(port)ctx_state_0_i");
    sc_trace(mVcdFile, ctx_state_0_o, "(port)ctx_state_0_o");
    sc_trace(mVcdFile, ctx_state_0_o_ap_vld, "(port)ctx_state_0_o_ap_vld");
    sc_trace(mVcdFile, ctx_state_1_i, "(port)ctx_state_1_i");
    sc_trace(mVcdFile, ctx_state_1_o, "(port)ctx_state_1_o");
    sc_trace(mVcdFile, ctx_state_1_o_ap_vld, "(port)ctx_state_1_o_ap_vld");
    sc_trace(mVcdFile, ctx_state_2_i, "(port)ctx_state_2_i");
    sc_trace(mVcdFile, ctx_state_2_o, "(port)ctx_state_2_o");
    sc_trace(mVcdFile, ctx_state_2_o_ap_vld, "(port)ctx_state_2_o_ap_vld");
    sc_trace(mVcdFile, ctx_state_3_i, "(port)ctx_state_3_i");
    sc_trace(mVcdFile, ctx_state_3_o, "(port)ctx_state_3_o");
    sc_trace(mVcdFile, ctx_state_3_o_ap_vld, "(port)ctx_state_3_o_ap_vld");
    sc_trace(mVcdFile, ctx_state_4_i, "(port)ctx_state_4_i");
    sc_trace(mVcdFile, ctx_state_4_o, "(port)ctx_state_4_o");
    sc_trace(mVcdFile, ctx_state_4_o_ap_vld, "(port)ctx_state_4_o_ap_vld");
    sc_trace(mVcdFile, ctx_state_5_i, "(port)ctx_state_5_i");
    sc_trace(mVcdFile, ctx_state_5_o, "(port)ctx_state_5_o");
    sc_trace(mVcdFile, ctx_state_5_o_ap_vld, "(port)ctx_state_5_o_ap_vld");
    sc_trace(mVcdFile, ctx_state_6_i, "(port)ctx_state_6_i");
    sc_trace(mVcdFile, ctx_state_6_o, "(port)ctx_state_6_o");
    sc_trace(mVcdFile, ctx_state_6_o_ap_vld, "(port)ctx_state_6_o_ap_vld");
    sc_trace(mVcdFile, ctx_state_7_i, "(port)ctx_state_7_i");
    sc_trace(mVcdFile, ctx_state_7_o, "(port)ctx_state_7_o");
    sc_trace(mVcdFile, ctx_state_7_o_ap_vld, "(port)ctx_state_7_o_ap_vld");
    sc_trace(mVcdFile, ctx_bitlen_0_i, "(port)ctx_bitlen_0_i");
    sc_trace(mVcdFile, ctx_bitlen_0_o, "(port)ctx_bitlen_0_o");
    sc_trace(mVcdFile, ctx_bitlen_0_o_ap_vld, "(port)ctx_bitlen_0_o_ap_vld");
    sc_trace(mVcdFile, ctx_bitlen_1_i, "(port)ctx_bitlen_1_i");
    sc_trace(mVcdFile, ctx_bitlen_1_o, "(port)ctx_bitlen_1_o");
    sc_trace(mVcdFile, ctx_bitlen_1_o_ap_vld, "(port)ctx_bitlen_1_o_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, tmp_fu_324_p2, "tmp_fu_324_p2");
    sc_trace(mVcdFile, tmp_reg_790, "tmp_reg_790");
    sc_trace(mVcdFile, i_1_fu_330_p2, "i_1_fu_330_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, j_2_fu_364_p2, "j_2_fu_364_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_s_fu_358_p2, "tmp_s_fu_358_p2");
    sc_trace(mVcdFile, tmp_68_fu_408_p2, "tmp_68_fu_408_p2");
    sc_trace(mVcdFile, tmp_67_fu_398_p2, "tmp_67_fu_398_p2");
    sc_trace(mVcdFile, tmp_72_reg_823, "tmp_72_reg_823");
    sc_trace(mVcdFile, tmp_73_reg_828, "tmp_73_reg_828");
    sc_trace(mVcdFile, i_5_fu_510_p2, "i_5_fu_510_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_93_fu_523_p1, "tmp_93_fu_523_p1");
    sc_trace(mVcdFile, tmp_93_reg_841, "tmp_93_reg_841");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_74_reg_846, "tmp_74_reg_846");
    sc_trace(mVcdFile, tmp_76_reg_851, "tmp_76_reg_851");
    sc_trace(mVcdFile, tmp_77_reg_856, "tmp_77_reg_856");
    sc_trace(mVcdFile, i_2_cast2_fu_557_p1, "i_2_cast2_fu_557_p1");
    sc_trace(mVcdFile, i_2_cast2_reg_861, "i_2_cast2_reg_861");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, i_2_cast1_fu_561_p1, "i_2_cast1_fu_561_p1");
    sc_trace(mVcdFile, i_2_cast1_reg_866, "i_2_cast1_reg_866");
    sc_trace(mVcdFile, i_6_fu_571_p2, "i_6_fu_571_p2");
    sc_trace(mVcdFile, i_6_reg_874, "i_6_reg_874");
    sc_trace(mVcdFile, tmp_103_cast_fu_595_p1, "tmp_103_cast_fu_595_p1");
    sc_trace(mVcdFile, tmp_103_cast_reg_879, "tmp_103_cast_reg_879");
    sc_trace(mVcdFile, tmp_78_fu_565_p2, "tmp_78_fu_565_p2");
    sc_trace(mVcdFile, sum2_fu_614_p2, "sum2_fu_614_p2");
    sc_trace(mVcdFile, sum2_reg_889, "sum2_reg_889");
    sc_trace(mVcdFile, sum1_fu_640_p3, "sum1_fu_640_p3");
    sc_trace(mVcdFile, sum1_reg_895, "sum1_reg_895");
    sc_trace(mVcdFile, tmp_103_fu_749_p1, "tmp_103_fu_749_p1");
    sc_trace(mVcdFile, tmp_103_reg_900, "tmp_103_reg_900");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, tmp_104_fu_762_p1, "tmp_104_fu_762_p1");
    sc_trace(mVcdFile, tmp_104_reg_905, "tmp_104_reg_905");
    sc_trace(mVcdFile, grp_sha256_transform_fu_295_ap_start, "grp_sha256_transform_fu_295_ap_start");
    sc_trace(mVcdFile, grp_sha256_transform_fu_295_ap_done, "grp_sha256_transform_fu_295_ap_done");
    sc_trace(mVcdFile, grp_sha256_transform_fu_295_ap_idle, "grp_sha256_transform_fu_295_ap_idle");
    sc_trace(mVcdFile, grp_sha256_transform_fu_295_ap_ready, "grp_sha256_transform_fu_295_ap_ready");
    sc_trace(mVcdFile, grp_sha256_transform_fu_295_data_transform_address0, "grp_sha256_transform_fu_295_data_transform_address0");
    sc_trace(mVcdFile, grp_sha256_transform_fu_295_data_transform_ce0, "grp_sha256_transform_fu_295_data_transform_ce0");
    sc_trace(mVcdFile, grp_sha256_transform_fu_295_data_transform_address1, "grp_sha256_transform_fu_295_data_transform_address1");
    sc_trace(mVcdFile, grp_sha256_transform_fu_295_data_transform_ce1, "grp_sha256_transform_fu_295_data_transform_ce1");
    sc_trace(mVcdFile, grp_sha256_transform_fu_295_ctx_state_0_o, "grp_sha256_transform_fu_295_ctx_state_0_o");
    sc_trace(mVcdFile, grp_sha256_transform_fu_295_ctx_state_0_o_ap_vld, "grp_sha256_transform_fu_295_ctx_state_0_o_ap_vld");
    sc_trace(mVcdFile, grp_sha256_transform_fu_295_ctx_state_1_o, "grp_sha256_transform_fu_295_ctx_state_1_o");
    sc_trace(mVcdFile, grp_sha256_transform_fu_295_ctx_state_1_o_ap_vld, "grp_sha256_transform_fu_295_ctx_state_1_o_ap_vld");
    sc_trace(mVcdFile, grp_sha256_transform_fu_295_ctx_state_2_o, "grp_sha256_transform_fu_295_ctx_state_2_o");
    sc_trace(mVcdFile, grp_sha256_transform_fu_295_ctx_state_2_o_ap_vld, "grp_sha256_transform_fu_295_ctx_state_2_o_ap_vld");
    sc_trace(mVcdFile, grp_sha256_transform_fu_295_ctx_state_3_o, "grp_sha256_transform_fu_295_ctx_state_3_o");
    sc_trace(mVcdFile, grp_sha256_transform_fu_295_ctx_state_3_o_ap_vld, "grp_sha256_transform_fu_295_ctx_state_3_o_ap_vld");
    sc_trace(mVcdFile, grp_sha256_transform_fu_295_ctx_state_4_o, "grp_sha256_transform_fu_295_ctx_state_4_o");
    sc_trace(mVcdFile, grp_sha256_transform_fu_295_ctx_state_4_o_ap_vld, "grp_sha256_transform_fu_295_ctx_state_4_o_ap_vld");
    sc_trace(mVcdFile, grp_sha256_transform_fu_295_ctx_state_5_o, "grp_sha256_transform_fu_295_ctx_state_5_o");
    sc_trace(mVcdFile, grp_sha256_transform_fu_295_ctx_state_5_o_ap_vld, "grp_sha256_transform_fu_295_ctx_state_5_o_ap_vld");
    sc_trace(mVcdFile, grp_sha256_transform_fu_295_ctx_state_6_o, "grp_sha256_transform_fu_295_ctx_state_6_o");
    sc_trace(mVcdFile, grp_sha256_transform_fu_295_ctx_state_6_o_ap_vld, "grp_sha256_transform_fu_295_ctx_state_6_o_ap_vld");
    sc_trace(mVcdFile, grp_sha256_transform_fu_295_ctx_state_7_o, "grp_sha256_transform_fu_295_ctx_state_7_o");
    sc_trace(mVcdFile, grp_sha256_transform_fu_295_ctx_state_7_o_ap_vld, "grp_sha256_transform_fu_295_ctx_state_7_o_ap_vld");
    sc_trace(mVcdFile, i_1_in_reg_245, "i_1_in_reg_245");
    sc_trace(mVcdFile, icmp_fu_347_p2, "icmp_fu_347_p2");
    sc_trace(mVcdFile, j_reg_254, "j_reg_254");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i_0_in_reg_265, "i_0_in_reg_265");
    sc_trace(mVcdFile, exitcond_fu_517_p2, "exitcond_fu_517_p2");
    sc_trace(mVcdFile, ctx_bitlen_1_loc_reg_274, "ctx_bitlen_1_loc_reg_274");
    sc_trace(mVcdFile, i_2_reg_283, "i_2_reg_283");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_reg_grp_sha256_transform_fu_295_ap_start, "ap_reg_grp_sha256_transform_fu_295_ap_start");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, j_cast5_fu_353_p1, "j_cast5_fu_353_p1");
    sc_trace(mVcdFile, sum2_cast_fu_620_p1, "sum2_cast_fu_620_p1");
    sc_trace(mVcdFile, sum4_cast_fu_648_p1, "sum4_cast_fu_648_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, sum6_cast_fu_684_p1, "sum6_cast_fu_684_p1");
    sc_trace(mVcdFile, sum8_cast_fu_711_p1, "sum8_cast_fu_711_p1");
    sc_trace(mVcdFile, sum_cast_fu_735_p1, "sum_cast_fu_735_p1");
    sc_trace(mVcdFile, sum1_cast_fu_769_p1, "sum1_cast_fu_769_p1");
    sc_trace(mVcdFile, sum3_cast_fu_777_p1, "sum3_cast_fu_777_p1");
    sc_trace(mVcdFile, tmp_69_fu_448_p2, "tmp_69_fu_448_p2");
    sc_trace(mVcdFile, tmp_70_fu_472_p2, "tmp_70_fu_472_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_98_fu_609_p1, "tmp_98_fu_609_p1");
    sc_trace(mVcdFile, tmp_99_fu_635_p1, "tmp_99_fu_635_p1");
    sc_trace(mVcdFile, tmp_97_fu_662_p1, "tmp_97_fu_662_p1");
    sc_trace(mVcdFile, tmp_100_fu_676_p1, "tmp_100_fu_676_p1");
    sc_trace(mVcdFile, tmp_101_fu_698_p1, "tmp_101_fu_698_p1");
    sc_trace(mVcdFile, tmp_102_fu_725_p1, "tmp_102_fu_725_p1");
    sc_trace(mVcdFile, tmp_75_fu_337_p4, "tmp_75_fu_337_p4");
    sc_trace(mVcdFile, tmp_83_fu_374_p1, "tmp_83_fu_374_p1");
    sc_trace(mVcdFile, tmp_65_fu_380_p3, "tmp_65_fu_380_p3");
    sc_trace(mVcdFile, tmp_82_cast_fu_388_p1, "tmp_82_cast_fu_388_p1");
    sc_trace(mVcdFile, tmp_66_fu_392_p2, "tmp_66_fu_392_p2");
    sc_trace(mVcdFile, tmp_85_fu_377_p1, "tmp_85_fu_377_p1");
    sc_trace(mVcdFile, tmp_91_fu_440_p1, "tmp_91_fu_440_p1");
    sc_trace(mVcdFile, tmp_17_fu_444_p1, "tmp_17_fu_444_p1");
    sc_trace(mVcdFile, tmp_89_fu_432_p1, "tmp_89_fu_432_p1");
    sc_trace(mVcdFile, tmp_15_fu_436_p1, "tmp_15_fu_436_p1");
    sc_trace(mVcdFile, tmp_87_fu_428_p1, "tmp_87_fu_428_p1");
    sc_trace(mVcdFile, tmp_12_fu_420_p3, "tmp_12_fu_420_p3");
    sc_trace(mVcdFile, tmp_86_cast_fu_460_p2, "tmp_86_cast_fu_460_p2");
    sc_trace(mVcdFile, tmp_86_cast3_fu_454_p2, "tmp_86_cast3_fu_454_p2");
    sc_trace(mVcdFile, tmp_95_fu_577_p1, "tmp_95_fu_577_p1");
    sc_trace(mVcdFile, tmp_79_fu_581_p3, "tmp_79_fu_581_p3");
    sc_trace(mVcdFile, tmp_80_fu_589_p2, "tmp_80_fu_589_p2");
    sc_trace(mVcdFile, tmp_82_fu_603_p2, "tmp_82_fu_603_p2");
    sc_trace(mVcdFile, tmp_84_fu_629_p2, "tmp_84_fu_629_p2");
    sc_trace(mVcdFile, tmp_81_fu_657_p2, "tmp_81_fu_657_p2");
    sc_trace(mVcdFile, tmp_86_fu_671_p2, "tmp_86_fu_671_p2");
    sc_trace(mVcdFile, sum6_cast8_fu_681_p1, "sum6_cast8_fu_681_p1");
    sc_trace(mVcdFile, tmp_88_fu_693_p2, "tmp_88_fu_693_p2");
    sc_trace(mVcdFile, sum4_fu_703_p3, "sum4_fu_703_p3");
    sc_trace(mVcdFile, tmp_90_fu_720_p2, "tmp_90_fu_720_p2");
    sc_trace(mVcdFile, sum_fu_730_p2, "sum_fu_730_p2");
    sc_trace(mVcdFile, tmp_92_fu_744_p2, "tmp_92_fu_744_p2");
    sc_trace(mVcdFile, tmp_94_fu_757_p2, "tmp_94_fu_757_p2");
    sc_trace(mVcdFile, sum1_cast7_fu_766_p1, "sum1_cast7_fu_766_p1");
    sc_trace(mVcdFile, sum3_cast6_fu_774_p1, "sum3_cast6_fu_774_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_condition_132, "ap_condition_132");
    sc_trace(mVcdFile, ap_condition_260, "ap_condition_260");
#endif

    }
}

sha256_final::~sha256_final() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_sha256_transform_fu_295;
}

void sha256_final::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_grp_sha256_transform_fu_295_ap_start = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_347_p2.read())) || 
             (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read())))) {
            ap_reg_grp_sha256_transform_fu_295_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_sha256_transform_fu_295_ap_ready.read())) {
            ap_reg_grp_sha256_transform_fu_295_ap_start = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read())) {
        if (esl_seteq<1,1,1>(ap_condition_260.read(), ap_const_boolean_1)) {
            ctx_bitlen_1_loc_reg_274 = ctx_bitlen_1_i.read();
        } else if (esl_seteq<1,1,1>(ap_condition_132.read(), ap_const_boolean_1)) {
            ctx_bitlen_1_loc_reg_274 = tmp_68_fu_408_p2.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         !esl_seteq<1,1,1>(tmp_fu_324_p2.read(), ap_const_lv1_0))) {
        i_0_in_reg_265 = ctx_datalen.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_517_p2.read()))) {
        i_0_in_reg_265 = i_5_fu_510_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(tmp_fu_324_p2.read(), ap_const_lv1_0))) {
        i_1_in_reg_245 = ctx_datalen.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_347_p2.read()))) {
        i_1_in_reg_245 = i_1_fu_330_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read()))) {
        i_2_reg_283 = i_6_reg_874.read();
    } else if ((!esl_seteq<1,1,1>(ap_const_logic_0, grp_sha256_transform_fu_295_ap_done.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        i_2_reg_283 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(tmp_reg_790.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_358_p2.read()))) {
        j_reg_254 = j_2_fu_364_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && 
                !esl_seteq<1,1,1>(ap_const_logic_0, grp_sha256_transform_fu_295_ap_done.read()))) {
        j_reg_254 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read()))) {
        i_2_cast1_reg_866 = i_2_cast1_fu_561_p1.read();
        i_2_cast2_reg_861 = i_2_cast2_fu_557_p1.read();
        i_6_reg_874 = i_6_fu_571_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_78_fu_565_p2.read()))) {
        sum1_reg_895 = sum1_fu_640_p3.read();
        sum2_reg_889 = sum2_fu_614_p2.read();
        tmp_103_cast_reg_879 = tmp_103_cast_fu_595_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read()))) {
        tmp_103_reg_900 = tmp_103_fu_749_p1.read();
        tmp_104_reg_905 = tmp_104_fu_762_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && (!esl_seteq<1,1,1>(tmp_reg_790.read(), ap_const_lv1_0) || 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_358_p2.read())))) {
        tmp_72_reg_823 = tmp_86_cast3_fu_454_p2.read().range(23, 16);
        tmp_73_reg_828 = tmp_69_fu_448_p2.read().range(31, 24);
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read()))) {
        tmp_74_reg_846 = ctx_bitlen_1_loc_reg_274.read().range(15, 8);
        tmp_76_reg_851 = ctx_bitlen_1_loc_reg_274.read().range(23, 16);
        tmp_77_reg_856 = ctx_bitlen_1_loc_reg_274.read().range(31, 24);
        tmp_93_reg_841 = tmp_93_fu_523_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        tmp_reg_790 = tmp_fu_324_p2.read();
    }
}

void sha256_final::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void sha256_final::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read().range(9, 9);
}

void sha256_final::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read().range(10, 10);
}

void sha256_final::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read().range(11, 11);
}

void sha256_final::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read().range(12, 12);
}

void sha256_final::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read().range(13, 13);
}

void sha256_final::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read().range(1, 1);
}

void sha256_final::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read().range(2, 2);
}

void sha256_final::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read().range(3, 3);
}

void sha256_final::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read().range(4, 4);
}

void sha256_final::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read().range(5, 5);
}

void sha256_final::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read().range(6, 6);
}

void sha256_final::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read().range(7, 7);
}

void sha256_final::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read().range(8, 8);
}

void sha256_final::thread_ap_condition_132() {
    ap_condition_132 = ((!esl_seteq<1,1,1>(tmp_reg_790.read(), ap_const_lv1_0) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_67_fu_398_p2.read())) || (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_358_p2.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_67_fu_398_p2.read())));
}

void sha256_final::thread_ap_condition_260() {
    ap_condition_260 = ((!esl_seteq<1,1,1>(tmp_reg_790.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_67_fu_398_p2.read())) || (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_358_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_67_fu_398_p2.read())));
}

void sha256_final::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_78_fu_565_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void sha256_final::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void sha256_final::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_78_fu_565_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_bitlen_0_o() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
         (!esl_seteq<1,1,1>(tmp_reg_790.read(), ap_const_lv1_0) || 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_358_p2.read())))) {
        ctx_bitlen_0_o = tmp_69_fu_448_p2.read();
    } else {
        ctx_bitlen_0_o = ctx_bitlen_0_i.read();
    }
}

void sha256_final::thread_ctx_bitlen_0_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
         (!esl_seteq<1,1,1>(tmp_reg_790.read(), ap_const_lv1_0) || 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_358_p2.read())))) {
        ctx_bitlen_0_o_ap_vld = ap_const_logic_1;
    } else {
        ctx_bitlen_0_o_ap_vld = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_bitlen_1_o() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
         ((!esl_seteq<1,1,1>(tmp_reg_790.read(), ap_const_lv1_0) && 
           !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_67_fu_398_p2.read())) || 
          (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_358_p2.read()) && 
           !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_67_fu_398_p2.read()))))) {
        ctx_bitlen_1_o = tmp_68_fu_408_p2.read();
    } else {
        ctx_bitlen_1_o = ctx_bitlen_1_i.read();
    }
}

void sha256_final::thread_ctx_bitlen_1_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
         ((!esl_seteq<1,1,1>(tmp_reg_790.read(), ap_const_lv1_0) && 
           !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_67_fu_398_p2.read())) || 
          (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_358_p2.read()) && 
           !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_67_fu_398_p2.read()))))) {
        ctx_bitlen_1_o_ap_vld = ap_const_logic_1;
    } else {
        ctx_bitlen_1_o_ap_vld = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_in_data_address0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()))) {
        ctx_in_data_address0 = ap_const_lv6_38;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
        ctx_in_data_address0 = ap_const_lv6_3A;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read()))) {
        ctx_in_data_address0 = ap_const_lv6_3C;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
                (!esl_seteq<1,1,1>(tmp_reg_790.read(), ap_const_lv1_0) || 
                 !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_358_p2.read())))) {
        ctx_in_data_address0 = ap_const_lv6_3F;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(tmp_reg_790.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_358_p2.read()))) {
        ctx_in_data_address0 =  (sc_lv<6>) (j_cast5_fu_353_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_347_p2.read()))) {
        ctx_in_data_address0 =  (sc_lv<6>) (i_1_fu_330_p2.read());
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ctx_in_data_address0 =  (sc_lv<6>) (ctx_datalen.read());
    } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read())) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read())))) {
        ctx_in_data_address0 = grp_sha256_transform_fu_295_data_transform_address0.read();
    } else {
        ctx_in_data_address0 = "XXXXXX";
    }
}

void sha256_final::thread_ctx_in_data_address1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()))) {
        ctx_in_data_address1 = ap_const_lv6_39;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
        ctx_in_data_address1 = ap_const_lv6_3B;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read()))) {
        ctx_in_data_address1 = ap_const_lv6_3D;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()))) {
        ctx_in_data_address1 =  (sc_lv<6>) (i_5_fu_510_p2.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()))) {
        ctx_in_data_address1 = ap_const_lv6_3E;
    } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read())) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read())))) {
        ctx_in_data_address1 = grp_sha256_transform_fu_295_data_transform_address1.read();
    } else {
        ctx_in_data_address1 = "XXXXXX";
    }
}

void sha256_final::thread_ctx_in_data_ce0() {
    if (((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
          !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
          (!esl_seteq<1,1,1>(tmp_reg_790.read(), ap_const_lv1_0) || 
           !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_358_p2.read()))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_347_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(tmp_reg_790.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_358_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read())))) {
        ctx_in_data_ce0 = ap_const_logic_1;
    } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read())) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read())))) {
        ctx_in_data_ce0 = grp_sha256_transform_fu_295_data_transform_ce0.read();
    } else {
        ctx_in_data_ce0 = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_in_data_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read())))) {
        ctx_in_data_ce1 = ap_const_logic_1;
    } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read())) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read())))) {
        ctx_in_data_ce1 = grp_sha256_transform_fu_295_data_transform_ce1.read();
    } else {
        ctx_in_data_ce1 = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_in_data_d0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()))) {
        ctx_in_data_d0 = tmp_77_reg_856.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
        ctx_in_data_d0 = tmp_74_reg_846.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read()))) {
        ctx_in_data_d0 = tmp_73_reg_828.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
                (!esl_seteq<1,1,1>(tmp_reg_790.read(), ap_const_lv1_0) || 
                 !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_358_p2.read())))) {
        ctx_in_data_d0 = tmp_70_fu_472_p2.read();
    } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
                 !esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_347_p2.read())) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
                 esl_seteq<1,1,1>(tmp_reg_790.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_358_p2.read())))) {
        ctx_in_data_d0 = ap_const_lv8_0;
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ctx_in_data_d0 = ap_const_lv8_80;
    } else {
        ctx_in_data_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void sha256_final::thread_ctx_in_data_d1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()))) {
        ctx_in_data_d1 = tmp_76_reg_851.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
        ctx_in_data_d1 = tmp_93_reg_841.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read()))) {
        ctx_in_data_d1 = tmp_72_reg_823.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()))) {
        ctx_in_data_d1 = ap_const_lv8_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()))) {
        ctx_in_data_d1 = tmp_86_cast_fu_460_p2.read().range(15, 8);
    } else {
        ctx_in_data_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void sha256_final::thread_ctx_in_data_we0() {
    if (((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
          !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
          (!esl_seteq<1,1,1>(tmp_reg_790.read(), ap_const_lv1_0) || 
           !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_358_p2.read()))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_347_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(tmp_reg_790.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_358_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read())))) {
        ctx_in_data_we0 = ap_const_logic_1;
    } else {
        ctx_in_data_we0 = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_in_data_we1() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
          (!esl_seteq<1,1,1>(tmp_reg_790.read(), ap_const_lv1_0) || 
           !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_358_p2.read()))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_517_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read())))) {
        ctx_in_data_we1 = ap_const_logic_1;
    } else {
        ctx_in_data_we1 = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_state_0_o() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_sha256_transform_fu_295_ctx_state_0_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_sha256_transform_fu_295_ctx_state_0_o_ap_vld.read())))) {
        ctx_state_0_o = grp_sha256_transform_fu_295_ctx_state_0_o.read();
    } else {
        ctx_state_0_o = ctx_state_0_i.read();
    }
}

void sha256_final::thread_ctx_state_0_o_ap_vld() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read())))) {
        ctx_state_0_o_ap_vld = grp_sha256_transform_fu_295_ctx_state_0_o_ap_vld.read();
    } else {
        ctx_state_0_o_ap_vld = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_state_1_o() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_sha256_transform_fu_295_ctx_state_1_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_sha256_transform_fu_295_ctx_state_1_o_ap_vld.read())))) {
        ctx_state_1_o = grp_sha256_transform_fu_295_ctx_state_1_o.read();
    } else {
        ctx_state_1_o = ctx_state_1_i.read();
    }
}

void sha256_final::thread_ctx_state_1_o_ap_vld() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read())))) {
        ctx_state_1_o_ap_vld = grp_sha256_transform_fu_295_ctx_state_1_o_ap_vld.read();
    } else {
        ctx_state_1_o_ap_vld = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_state_2_o() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_sha256_transform_fu_295_ctx_state_2_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_sha256_transform_fu_295_ctx_state_2_o_ap_vld.read())))) {
        ctx_state_2_o = grp_sha256_transform_fu_295_ctx_state_2_o.read();
    } else {
        ctx_state_2_o = ctx_state_2_i.read();
    }
}

void sha256_final::thread_ctx_state_2_o_ap_vld() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read())))) {
        ctx_state_2_o_ap_vld = grp_sha256_transform_fu_295_ctx_state_2_o_ap_vld.read();
    } else {
        ctx_state_2_o_ap_vld = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_state_3_o() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_sha256_transform_fu_295_ctx_state_3_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_sha256_transform_fu_295_ctx_state_3_o_ap_vld.read())))) {
        ctx_state_3_o = grp_sha256_transform_fu_295_ctx_state_3_o.read();
    } else {
        ctx_state_3_o = ctx_state_3_i.read();
    }
}

void sha256_final::thread_ctx_state_3_o_ap_vld() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read())))) {
        ctx_state_3_o_ap_vld = grp_sha256_transform_fu_295_ctx_state_3_o_ap_vld.read();
    } else {
        ctx_state_3_o_ap_vld = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_state_4_o() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_sha256_transform_fu_295_ctx_state_4_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_sha256_transform_fu_295_ctx_state_4_o_ap_vld.read())))) {
        ctx_state_4_o = grp_sha256_transform_fu_295_ctx_state_4_o.read();
    } else {
        ctx_state_4_o = ctx_state_4_i.read();
    }
}

void sha256_final::thread_ctx_state_4_o_ap_vld() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read())))) {
        ctx_state_4_o_ap_vld = grp_sha256_transform_fu_295_ctx_state_4_o_ap_vld.read();
    } else {
        ctx_state_4_o_ap_vld = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_state_5_o() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_sha256_transform_fu_295_ctx_state_5_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_sha256_transform_fu_295_ctx_state_5_o_ap_vld.read())))) {
        ctx_state_5_o = grp_sha256_transform_fu_295_ctx_state_5_o.read();
    } else {
        ctx_state_5_o = ctx_state_5_i.read();
    }
}

void sha256_final::thread_ctx_state_5_o_ap_vld() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read())))) {
        ctx_state_5_o_ap_vld = grp_sha256_transform_fu_295_ctx_state_5_o_ap_vld.read();
    } else {
        ctx_state_5_o_ap_vld = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_state_6_o() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_sha256_transform_fu_295_ctx_state_6_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_sha256_transform_fu_295_ctx_state_6_o_ap_vld.read())))) {
        ctx_state_6_o = grp_sha256_transform_fu_295_ctx_state_6_o.read();
    } else {
        ctx_state_6_o = ctx_state_6_i.read();
    }
}

void sha256_final::thread_ctx_state_6_o_ap_vld() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read())))) {
        ctx_state_6_o_ap_vld = grp_sha256_transform_fu_295_ctx_state_6_o_ap_vld.read();
    } else {
        ctx_state_6_o_ap_vld = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_state_7_o() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_sha256_transform_fu_295_ctx_state_7_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_sha256_transform_fu_295_ctx_state_7_o_ap_vld.read())))) {
        ctx_state_7_o = grp_sha256_transform_fu_295_ctx_state_7_o.read();
    } else {
        ctx_state_7_o = ctx_state_7_i.read();
    }
}

void sha256_final::thread_ctx_state_7_o_ap_vld() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read())))) {
        ctx_state_7_o_ap_vld = grp_sha256_transform_fu_295_ctx_state_7_o_ap_vld.read();
    } else {
        ctx_state_7_o_ap_vld = ap_const_logic_0;
    }
}

void sha256_final::thread_exitcond_fu_517_p2() {
    exitcond_fu_517_p2 = (!i_0_in_reg_265.read().is_01() || !ap_const_lv32_37.is_01())? sc_lv<1>(): sc_lv<1>(i_0_in_reg_265.read() == ap_const_lv32_37);
}

void sha256_final::thread_final_hash_address0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read()))) {
        final_hash_address0 =  (sc_lv<5>) (sum1_cast_fu_769_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read()))) {
        final_hash_address0 =  (sc_lv<5>) (sum8_cast_fu_711_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()))) {
        final_hash_address0 =  (sc_lv<5>) (i_2_cast2_reg_861.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read()))) {
        final_hash_address0 =  (sc_lv<5>) (sum2_cast_fu_620_p1.read());
    } else {
        final_hash_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void sha256_final::thread_final_hash_address1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read()))) {
        final_hash_address1 =  (sc_lv<5>) (sum3_cast_fu_777_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read()))) {
        final_hash_address1 =  (sc_lv<5>) (sum_cast_fu_735_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()))) {
        final_hash_address1 =  (sc_lv<5>) (sum6_cast_fu_684_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read()))) {
        final_hash_address1 =  (sc_lv<5>) (sum4_cast_fu_648_p1.read());
    } else {
        final_hash_address1 =  (sc_lv<5>) ("XXXXX");
    }
}

void sha256_final::thread_final_hash_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read())))) {
        final_hash_ce0 = ap_const_logic_1;
    } else {
        final_hash_ce0 = ap_const_logic_0;
    }
}

void sha256_final::thread_final_hash_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read())))) {
        final_hash_ce1 = ap_const_logic_1;
    } else {
        final_hash_ce1 = ap_const_logic_0;
    }
}

void sha256_final::thread_final_hash_d0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read()))) {
        final_hash_d0 = tmp_103_reg_900.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read()))) {
        final_hash_d0 = tmp_101_fu_698_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()))) {
        final_hash_d0 = tmp_97_fu_662_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read()))) {
        final_hash_d0 = tmp_98_fu_609_p1.read();
    } else {
        final_hash_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void sha256_final::thread_final_hash_d1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read()))) {
        final_hash_d1 = tmp_104_reg_905.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read()))) {
        final_hash_d1 = tmp_102_fu_725_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()))) {
        final_hash_d1 = tmp_100_fu_676_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read()))) {
        final_hash_d1 = tmp_99_fu_635_p1.read();
    } else {
        final_hash_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void sha256_final::thread_final_hash_we0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_78_fu_565_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read())))) {
        final_hash_we0 = ap_const_logic_1;
    } else {
        final_hash_we0 = ap_const_logic_0;
    }
}

void sha256_final::thread_final_hash_we1() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_78_fu_565_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read())))) {
        final_hash_we1 = ap_const_logic_1;
    } else {
        final_hash_we1 = ap_const_logic_0;
    }
}

void sha256_final::thread_grp_sha256_transform_fu_295_ap_start() {
    grp_sha256_transform_fu_295_ap_start = ap_reg_grp_sha256_transform_fu_295_ap_start.read();
}

void sha256_final::thread_i_1_fu_330_p2() {
    i_1_fu_330_p2 = (!i_1_in_reg_245.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i_1_in_reg_245.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void sha256_final::thread_i_2_cast1_fu_561_p1() {
    i_2_cast1_fu_561_p1 = esl_zext<5,3>(i_2_reg_283.read());
}

void sha256_final::thread_i_2_cast2_fu_557_p1() {
    i_2_cast2_fu_557_p1 = esl_zext<32,3>(i_2_reg_283.read());
}

void sha256_final::thread_i_5_fu_510_p2() {
    i_5_fu_510_p2 = (!i_0_in_reg_265.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i_0_in_reg_265.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void sha256_final::thread_i_6_fu_571_p2() {
    i_6_fu_571_p2 = (!i_2_reg_283.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_2_reg_283.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void sha256_final::thread_icmp_fu_347_p2() {
    icmp_fu_347_p2 = (!tmp_75_fu_337_p4.read().is_01() || !ap_const_lv26_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_75_fu_337_p4.read() == ap_const_lv26_0);
}

void sha256_final::thread_j_2_fu_364_p2() {
    j_2_fu_364_p2 = (!j_reg_254.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(j_reg_254.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void sha256_final::thread_j_cast5_fu_353_p1() {
    j_cast5_fu_353_p1 = esl_zext<32,6>(j_reg_254.read());
}

void sha256_final::thread_sum1_cast7_fu_766_p1() {
    sum1_cast7_fu_766_p1 = esl_sext<5,4>(sum1_reg_895.read());
}

void sha256_final::thread_sum1_cast_fu_769_p1() {
    sum1_cast_fu_769_p1 = esl_zext<32,5>(sum1_cast7_fu_766_p1.read());
}

void sha256_final::thread_sum1_fu_640_p3() {
    sum1_fu_640_p3 = esl_concat<1,3>(ap_const_lv1_1, i_2_reg_283.read());
}

void sha256_final::thread_sum2_cast_fu_620_p1() {
    sum2_cast_fu_620_p1 = esl_zext<32,3>(sum2_fu_614_p2.read());
}

void sha256_final::thread_sum2_fu_614_p2() {
    sum2_fu_614_p2 = (i_2_reg_283.read() ^ ap_const_lv3_4);
}

void sha256_final::thread_sum3_cast6_fu_774_p1() {
    sum3_cast6_fu_774_p1 = esl_sext<5,3>(sum2_reg_889.read());
}

void sha256_final::thread_sum3_cast_fu_777_p1() {
    sum3_cast_fu_777_p1 = esl_zext<32,5>(sum3_cast6_fu_774_p1.read());
}

void sha256_final::thread_sum4_cast_fu_648_p1() {
    sum4_cast_fu_648_p1 = esl_zext<32,4>(sum1_fu_640_p3.read());
}

void sha256_final::thread_sum4_fu_703_p3() {
    sum4_fu_703_p3 = esl_concat<2,3>(ap_const_lv2_2, i_2_reg_283.read());
}

void sha256_final::thread_sum6_cast8_fu_681_p1() {
    sum6_cast8_fu_681_p1 = esl_sext<4,3>(sum2_reg_889.read());
}

void sha256_final::thread_sum6_cast_fu_684_p1() {
    sum6_cast_fu_684_p1 = esl_zext<32,4>(sum6_cast8_fu_681_p1.read());
}

void sha256_final::thread_sum8_cast_fu_711_p1() {
    sum8_cast_fu_711_p1 = esl_zext<32,5>(sum4_fu_703_p3.read());
}

void sha256_final::thread_sum_cast_fu_735_p1() {
    sum_cast_fu_735_p1 = esl_zext<32,5>(sum_fu_730_p2.read());
}

void sha256_final::thread_sum_fu_730_p2() {
    sum_fu_730_p2 = (!ap_const_lv5_14.is_01() || !i_2_cast1_reg_866.read().is_01())? sc_lv<5>(): (sc_bigint<5>(ap_const_lv5_14) + sc_biguint<5>(i_2_cast1_reg_866.read()));
}

void sha256_final::thread_tmp_100_fu_676_p1() {
    tmp_100_fu_676_p1 = tmp_86_fu_671_p2.read().range(8-1, 0);
}

void sha256_final::thread_tmp_101_fu_698_p1() {
    tmp_101_fu_698_p1 = tmp_88_fu_693_p2.read().range(8-1, 0);
}

void sha256_final::thread_tmp_102_fu_725_p1() {
    tmp_102_fu_725_p1 = tmp_90_fu_720_p2.read().range(8-1, 0);
}

void sha256_final::thread_tmp_103_cast_fu_595_p1() {
    tmp_103_cast_fu_595_p1 = esl_zext<32,5>(tmp_80_fu_589_p2.read());
}

void sha256_final::thread_tmp_103_fu_749_p1() {
    tmp_103_fu_749_p1 = tmp_92_fu_744_p2.read().range(8-1, 0);
}

void sha256_final::thread_tmp_104_fu_762_p1() {
    tmp_104_fu_762_p1 = tmp_94_fu_757_p2.read().range(8-1, 0);
}

void sha256_final::thread_tmp_12_fu_420_p3() {
    tmp_12_fu_420_p3 = esl_concat<5,3>(tmp_85_fu_377_p1.read(), ap_const_lv3_0);
}

void sha256_final::thread_tmp_15_fu_436_p1() {
    tmp_15_fu_436_p1 = esl_zext<16,9>(tmp_65_fu_380_p3.read());
}

void sha256_final::thread_tmp_17_fu_444_p1() {
    tmp_17_fu_444_p1 = esl_zext<24,9>(tmp_65_fu_380_p3.read());
}

void sha256_final::thread_tmp_65_fu_380_p3() {
    tmp_65_fu_380_p3 = esl_concat<6,3>(tmp_83_fu_374_p1.read(), ap_const_lv3_0);
}

void sha256_final::thread_tmp_66_fu_392_p2() {
    tmp_66_fu_392_p2 = (tmp_82_cast_fu_388_p1.read() ^ ap_const_lv32_FFFFFFFF);
}

void sha256_final::thread_tmp_67_fu_398_p2() {
    tmp_67_fu_398_p2 = (!ctx_bitlen_0_i.read().is_01() || !tmp_66_fu_392_p2.read().is_01())? sc_lv<1>(): (sc_biguint<32>(ctx_bitlen_0_i.read()) > sc_biguint<32>(tmp_66_fu_392_p2.read()));
}

void sha256_final::thread_tmp_68_fu_408_p2() {
    tmp_68_fu_408_p2 = (!ctx_bitlen_1_i.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(ctx_bitlen_1_i.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void sha256_final::thread_tmp_69_fu_448_p2() {
    tmp_69_fu_448_p2 = (!tmp_82_cast_fu_388_p1.read().is_01() || !ctx_bitlen_0_i.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_82_cast_fu_388_p1.read()) + sc_biguint<32>(ctx_bitlen_0_i.read()));
}

void sha256_final::thread_tmp_70_fu_472_p2() {
    tmp_70_fu_472_p2 = (!tmp_87_fu_428_p1.read().is_01() || !tmp_12_fu_420_p3.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_87_fu_428_p1.read()) + sc_biguint<8>(tmp_12_fu_420_p3.read()));
}

void sha256_final::thread_tmp_75_fu_337_p4() {
    tmp_75_fu_337_p4 = i_1_fu_330_p2.read().range(31, 6);
}

void sha256_final::thread_tmp_78_fu_565_p2() {
    tmp_78_fu_565_p2 = (!i_2_reg_283.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_2_reg_283.read() == ap_const_lv3_4);
}

void sha256_final::thread_tmp_79_fu_581_p3() {
    tmp_79_fu_581_p3 = esl_concat<2,3>(tmp_95_fu_577_p1.read(), ap_const_lv3_0);
}

void sha256_final::thread_tmp_80_fu_589_p2() {
    tmp_80_fu_589_p2 = (!ap_const_lv5_18.is_01() || !tmp_79_fu_581_p3.read().is_01())? sc_lv<5>(): (sc_bigint<5>(ap_const_lv5_18) - sc_biguint<5>(tmp_79_fu_581_p3.read()));
}

void sha256_final::thread_tmp_81_fu_657_p2() {
    tmp_81_fu_657_p2 = (!tmp_103_cast_reg_879.read().is_01())? sc_lv<32>(): ctx_state_0_i.read() >> (unsigned short)tmp_103_cast_reg_879.read().to_uint();
}

void sha256_final::thread_tmp_82_cast_fu_388_p1() {
    tmp_82_cast_fu_388_p1 = esl_zext<32,9>(tmp_65_fu_380_p3.read());
}

void sha256_final::thread_tmp_82_fu_603_p2() {
    tmp_82_fu_603_p2 = (!tmp_103_cast_fu_595_p1.read().is_01())? sc_lv<32>(): ctx_state_1_i.read() >> (unsigned short)tmp_103_cast_fu_595_p1.read().to_uint();
}

void sha256_final::thread_tmp_83_fu_374_p1() {
    tmp_83_fu_374_p1 = ctx_datalen.read().range(6-1, 0);
}

void sha256_final::thread_tmp_84_fu_629_p2() {
    tmp_84_fu_629_p2 = (!tmp_103_cast_fu_595_p1.read().is_01())? sc_lv<32>(): ctx_state_2_i.read() >> (unsigned short)tmp_103_cast_fu_595_p1.read().to_uint();
}

void sha256_final::thread_tmp_85_fu_377_p1() {
    tmp_85_fu_377_p1 = ctx_datalen.read().range(5-1, 0);
}

void sha256_final::thread_tmp_86_cast3_fu_454_p2() {
    tmp_86_cast3_fu_454_p2 = (!tmp_91_fu_440_p1.read().is_01() || !tmp_17_fu_444_p1.read().is_01())? sc_lv<24>(): (sc_biguint<24>(tmp_91_fu_440_p1.read()) + sc_biguint<24>(tmp_17_fu_444_p1.read()));
}

void sha256_final::thread_tmp_86_cast_fu_460_p2() {
    tmp_86_cast_fu_460_p2 = (!tmp_89_fu_432_p1.read().is_01() || !tmp_15_fu_436_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(tmp_89_fu_432_p1.read()) + sc_biguint<16>(tmp_15_fu_436_p1.read()));
}

void sha256_final::thread_tmp_86_fu_671_p2() {
    tmp_86_fu_671_p2 = (!tmp_103_cast_reg_879.read().is_01())? sc_lv<32>(): ctx_state_3_i.read() >> (unsigned short)tmp_103_cast_reg_879.read().to_uint();
}

void sha256_final::thread_tmp_87_fu_428_p1() {
    tmp_87_fu_428_p1 = ctx_bitlen_0_i.read().range(8-1, 0);
}

void sha256_final::thread_tmp_88_fu_693_p2() {
    tmp_88_fu_693_p2 = (!tmp_103_cast_reg_879.read().is_01())? sc_lv<32>(): ctx_state_4_i.read() >> (unsigned short)tmp_103_cast_reg_879.read().to_uint();
}

void sha256_final::thread_tmp_89_fu_432_p1() {
    tmp_89_fu_432_p1 = ctx_bitlen_0_i.read().range(16-1, 0);
}

void sha256_final::thread_tmp_90_fu_720_p2() {
    tmp_90_fu_720_p2 = (!tmp_103_cast_reg_879.read().is_01())? sc_lv<32>(): ctx_state_5_i.read() >> (unsigned short)tmp_103_cast_reg_879.read().to_uint();
}

void sha256_final::thread_tmp_91_fu_440_p1() {
    tmp_91_fu_440_p1 = ctx_bitlen_0_i.read().range(24-1, 0);
}

void sha256_final::thread_tmp_92_fu_744_p2() {
    tmp_92_fu_744_p2 = (!tmp_103_cast_reg_879.read().is_01())? sc_lv<32>(): ctx_state_6_i.read() >> (unsigned short)tmp_103_cast_reg_879.read().to_uint();
}

void sha256_final::thread_tmp_93_fu_523_p1() {
    tmp_93_fu_523_p1 = ctx_bitlen_1_loc_reg_274.read().range(8-1, 0);
}

void sha256_final::thread_tmp_94_fu_757_p2() {
    tmp_94_fu_757_p2 = (!tmp_103_cast_reg_879.read().is_01())? sc_lv<32>(): ctx_state_7_i.read() >> (unsigned short)tmp_103_cast_reg_879.read().to_uint();
}

void sha256_final::thread_tmp_95_fu_577_p1() {
    tmp_95_fu_577_p1 = i_2_reg_283.read().range(2-1, 0);
}

void sha256_final::thread_tmp_97_fu_662_p1() {
    tmp_97_fu_662_p1 = tmp_81_fu_657_p2.read().range(8-1, 0);
}

void sha256_final::thread_tmp_98_fu_609_p1() {
    tmp_98_fu_609_p1 = tmp_82_fu_603_p2.read().range(8-1, 0);
}

void sha256_final::thread_tmp_99_fu_635_p1() {
    tmp_99_fu_635_p1 = tmp_84_fu_629_p2.read().range(8-1, 0);
}

void sha256_final::thread_tmp_fu_324_p2() {
    tmp_fu_324_p2 = (!ctx_datalen.read().is_01() || !ap_const_lv32_38.is_01())? sc_lv<1>(): (sc_biguint<32>(ctx_datalen.read()) < sc_biguint<32>(ap_const_lv32_38));
}

void sha256_final::thread_tmp_s_fu_358_p2() {
    tmp_s_fu_358_p2 = (!j_reg_254.read().is_01() || !ap_const_lv6_38.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_254.read() == ap_const_lv6_38);
}

void sha256_final::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && !esl_seteq<1,1,1>(tmp_fu_324_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else if ((!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && esl_seteq<1,1,1>(tmp_fu_324_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_347_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_sha256_transform_fu_295_ap_done.read())) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((!esl_seteq<1,1,1>(tmp_reg_790.read(), ap_const_lv1_0) || !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_358_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_517_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_sha256_transform_fu_295_ap_done.read())) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 1024 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_78_fu_565_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
            break;
    }
}

}

