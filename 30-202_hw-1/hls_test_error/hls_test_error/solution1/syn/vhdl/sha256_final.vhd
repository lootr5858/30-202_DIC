-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sha256_final is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    final_hash_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    final_hash_ce0 : OUT STD_LOGIC;
    final_hash_we0 : OUT STD_LOGIC;
    final_hash_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    final_hash_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    final_hash_ce1 : OUT STD_LOGIC;
    final_hash_we1 : OUT STD_LOGIC;
    final_hash_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ctx_datalen : IN STD_LOGIC_VECTOR (31 downto 0);
    ctx_in_data_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    ctx_in_data_ce0 : OUT STD_LOGIC;
    ctx_in_data_we0 : OUT STD_LOGIC;
    ctx_in_data_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ctx_in_data_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ctx_in_data_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    ctx_in_data_ce1 : OUT STD_LOGIC;
    ctx_in_data_we1 : OUT STD_LOGIC;
    ctx_in_data_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ctx_in_data_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    ctx_state_0_i : IN STD_LOGIC_VECTOR (31 downto 0);
    ctx_state_0_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    ctx_state_0_o_ap_vld : OUT STD_LOGIC;
    ctx_state_1_i : IN STD_LOGIC_VECTOR (31 downto 0);
    ctx_state_1_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    ctx_state_1_o_ap_vld : OUT STD_LOGIC;
    ctx_state_2_i : IN STD_LOGIC_VECTOR (31 downto 0);
    ctx_state_2_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    ctx_state_2_o_ap_vld : OUT STD_LOGIC;
    ctx_state_3_i : IN STD_LOGIC_VECTOR (31 downto 0);
    ctx_state_3_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    ctx_state_3_o_ap_vld : OUT STD_LOGIC;
    ctx_state_4_i : IN STD_LOGIC_VECTOR (31 downto 0);
    ctx_state_4_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    ctx_state_4_o_ap_vld : OUT STD_LOGIC;
    ctx_state_5_i : IN STD_LOGIC_VECTOR (31 downto 0);
    ctx_state_5_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    ctx_state_5_o_ap_vld : OUT STD_LOGIC;
    ctx_state_6_i : IN STD_LOGIC_VECTOR (31 downto 0);
    ctx_state_6_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    ctx_state_6_o_ap_vld : OUT STD_LOGIC;
    ctx_state_7_i : IN STD_LOGIC_VECTOR (31 downto 0);
    ctx_state_7_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    ctx_state_7_o_ap_vld : OUT STD_LOGIC;
    ctx_bitlen_0_i : IN STD_LOGIC_VECTOR (31 downto 0);
    ctx_bitlen_0_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    ctx_bitlen_0_o_ap_vld : OUT STD_LOGIC;
    ctx_bitlen_1_i : IN STD_LOGIC_VECTOR (31 downto 0);
    ctx_bitlen_1_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    ctx_bitlen_1_o_ap_vld : OUT STD_LOGIC );
end;


architecture behav of sha256_final is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (13 downto 0) := "00000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (13 downto 0) := "00000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (13 downto 0) := "00000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (13 downto 0) := "00000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (13 downto 0) := "00000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (13 downto 0) := "00001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (13 downto 0) := "00010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (13 downto 0) := "00100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (13 downto 0) := "01000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv6_3E : STD_LOGIC_VECTOR (5 downto 0) := "111110";
    constant ap_const_lv6_3D : STD_LOGIC_VECTOR (5 downto 0) := "111101";
    constant ap_const_lv6_3C : STD_LOGIC_VECTOR (5 downto 0) := "111100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv6_3B : STD_LOGIC_VECTOR (5 downto 0) := "111011";
    constant ap_const_lv6_3A : STD_LOGIC_VECTOR (5 downto 0) := "111010";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv6_39 : STD_LOGIC_VECTOR (5 downto 0) := "111001";
    constant ap_const_lv6_38 : STD_LOGIC_VECTOR (5 downto 0) := "111000";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv26_0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal tmp_fu_324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_790 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_330_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal j_2_fu_364_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_s_fu_358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_68_fu_408_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_67_fu_398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_72_reg_823 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_73_reg_828 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_5_fu_510_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal tmp_93_fu_523_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_93_reg_841 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_74_reg_846 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_76_reg_851 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_77_reg_856 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_2_cast2_fu_557_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_2_cast2_reg_861 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal i_2_cast1_fu_561_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_2_cast1_reg_866 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_6_fu_571_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_6_reg_874 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_103_cast_fu_595_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_103_cast_reg_879 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_78_fu_565_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sum2_fu_614_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal sum2_reg_889 : STD_LOGIC_VECTOR (2 downto 0);
    signal sum1_fu_640_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal sum1_reg_895 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_103_fu_749_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_103_reg_900 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal tmp_104_fu_762_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_104_reg_905 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sha256_transform_fu_295_ap_start : STD_LOGIC;
    signal grp_sha256_transform_fu_295_ap_done : STD_LOGIC;
    signal grp_sha256_transform_fu_295_ap_idle : STD_LOGIC;
    signal grp_sha256_transform_fu_295_ap_ready : STD_LOGIC;
    signal grp_sha256_transform_fu_295_data_transform_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_sha256_transform_fu_295_data_transform_ce0 : STD_LOGIC;
    signal grp_sha256_transform_fu_295_data_transform_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_sha256_transform_fu_295_data_transform_ce1 : STD_LOGIC;
    signal grp_sha256_transform_fu_295_ctx_state_0_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sha256_transform_fu_295_ctx_state_0_o_ap_vld : STD_LOGIC;
    signal grp_sha256_transform_fu_295_ctx_state_1_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sha256_transform_fu_295_ctx_state_1_o_ap_vld : STD_LOGIC;
    signal grp_sha256_transform_fu_295_ctx_state_2_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sha256_transform_fu_295_ctx_state_2_o_ap_vld : STD_LOGIC;
    signal grp_sha256_transform_fu_295_ctx_state_3_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sha256_transform_fu_295_ctx_state_3_o_ap_vld : STD_LOGIC;
    signal grp_sha256_transform_fu_295_ctx_state_4_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sha256_transform_fu_295_ctx_state_4_o_ap_vld : STD_LOGIC;
    signal grp_sha256_transform_fu_295_ctx_state_5_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sha256_transform_fu_295_ctx_state_5_o_ap_vld : STD_LOGIC;
    signal grp_sha256_transform_fu_295_ctx_state_6_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sha256_transform_fu_295_ctx_state_6_o_ap_vld : STD_LOGIC;
    signal grp_sha256_transform_fu_295_ctx_state_7_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sha256_transform_fu_295_ctx_state_7_o_ap_vld : STD_LOGIC;
    signal i_1_in_reg_245 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_fu_347_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_reg_254 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal i_0_in_reg_265 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_fu_517_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctx_bitlen_1_loc_reg_274 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_2_reg_283 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_reg_grp_sha256_transform_fu_295_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal j_cast5_fu_353_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum2_cast_fu_620_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum4_cast_fu_648_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal sum6_cast_fu_684_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum8_cast_fu_711_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_cast_fu_735_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum1_cast_fu_769_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum3_cast_fu_777_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_69_fu_448_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_70_fu_472_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_98_fu_609_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_99_fu_635_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_97_fu_662_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_100_fu_676_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_101_fu_698_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_102_fu_725_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_75_fu_337_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_83_fu_374_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_65_fu_380_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_82_cast_fu_388_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_66_fu_392_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_85_fu_377_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_91_fu_440_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_17_fu_444_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_89_fu_432_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_15_fu_436_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_87_fu_428_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_420_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_86_cast_fu_460_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_86_cast3_fu_454_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_95_fu_577_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_79_fu_581_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_80_fu_589_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_82_fu_603_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_84_fu_629_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_81_fu_657_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_86_fu_671_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum6_cast8_fu_681_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_88_fu_693_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum4_fu_703_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_90_fu_720_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_fu_730_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_92_fu_744_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_94_fu_757_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum1_cast7_fu_766_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum3_cast6_fu_774_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_condition_132 : BOOLEAN;
    signal ap_condition_260 : BOOLEAN;

    component sha256_transform IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_transform_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_transform_ce0 : OUT STD_LOGIC;
        data_transform_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_transform_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_transform_ce1 : OUT STD_LOGIC;
        data_transform_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ctx_state_0_i : IN STD_LOGIC_VECTOR (31 downto 0);
        ctx_state_0_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        ctx_state_0_o_ap_vld : OUT STD_LOGIC;
        ctx_state_1_i : IN STD_LOGIC_VECTOR (31 downto 0);
        ctx_state_1_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        ctx_state_1_o_ap_vld : OUT STD_LOGIC;
        ctx_state_2_i : IN STD_LOGIC_VECTOR (31 downto 0);
        ctx_state_2_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        ctx_state_2_o_ap_vld : OUT STD_LOGIC;
        ctx_state_3_i : IN STD_LOGIC_VECTOR (31 downto 0);
        ctx_state_3_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        ctx_state_3_o_ap_vld : OUT STD_LOGIC;
        ctx_state_4_i : IN STD_LOGIC_VECTOR (31 downto 0);
        ctx_state_4_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        ctx_state_4_o_ap_vld : OUT STD_LOGIC;
        ctx_state_5_i : IN STD_LOGIC_VECTOR (31 downto 0);
        ctx_state_5_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        ctx_state_5_o_ap_vld : OUT STD_LOGIC;
        ctx_state_6_i : IN STD_LOGIC_VECTOR (31 downto 0);
        ctx_state_6_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        ctx_state_6_o_ap_vld : OUT STD_LOGIC;
        ctx_state_7_i : IN STD_LOGIC_VECTOR (31 downto 0);
        ctx_state_7_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        ctx_state_7_o_ap_vld : OUT STD_LOGIC );
    end component;



begin
    grp_sha256_transform_fu_295 : component sha256_transform
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sha256_transform_fu_295_ap_start,
        ap_done => grp_sha256_transform_fu_295_ap_done,
        ap_idle => grp_sha256_transform_fu_295_ap_idle,
        ap_ready => grp_sha256_transform_fu_295_ap_ready,
        data_transform_address0 => grp_sha256_transform_fu_295_data_transform_address0,
        data_transform_ce0 => grp_sha256_transform_fu_295_data_transform_ce0,
        data_transform_q0 => ctx_in_data_q0,
        data_transform_address1 => grp_sha256_transform_fu_295_data_transform_address1,
        data_transform_ce1 => grp_sha256_transform_fu_295_data_transform_ce1,
        data_transform_q1 => ctx_in_data_q1,
        ctx_state_0_i => ctx_state_0_i,
        ctx_state_0_o => grp_sha256_transform_fu_295_ctx_state_0_o,
        ctx_state_0_o_ap_vld => grp_sha256_transform_fu_295_ctx_state_0_o_ap_vld,
        ctx_state_1_i => ctx_state_1_i,
        ctx_state_1_o => grp_sha256_transform_fu_295_ctx_state_1_o,
        ctx_state_1_o_ap_vld => grp_sha256_transform_fu_295_ctx_state_1_o_ap_vld,
        ctx_state_2_i => ctx_state_2_i,
        ctx_state_2_o => grp_sha256_transform_fu_295_ctx_state_2_o,
        ctx_state_2_o_ap_vld => grp_sha256_transform_fu_295_ctx_state_2_o_ap_vld,
        ctx_state_3_i => ctx_state_3_i,
        ctx_state_3_o => grp_sha256_transform_fu_295_ctx_state_3_o,
        ctx_state_3_o_ap_vld => grp_sha256_transform_fu_295_ctx_state_3_o_ap_vld,
        ctx_state_4_i => ctx_state_4_i,
        ctx_state_4_o => grp_sha256_transform_fu_295_ctx_state_4_o,
        ctx_state_4_o_ap_vld => grp_sha256_transform_fu_295_ctx_state_4_o_ap_vld,
        ctx_state_5_i => ctx_state_5_i,
        ctx_state_5_o => grp_sha256_transform_fu_295_ctx_state_5_o,
        ctx_state_5_o_ap_vld => grp_sha256_transform_fu_295_ctx_state_5_o_ap_vld,
        ctx_state_6_i => ctx_state_6_i,
        ctx_state_6_o => grp_sha256_transform_fu_295_ctx_state_6_o,
        ctx_state_6_o_ap_vld => grp_sha256_transform_fu_295_ctx_state_6_o_ap_vld,
        ctx_state_7_i => ctx_state_7_i,
        ctx_state_7_o => grp_sha256_transform_fu_295_ctx_state_7_o,
        ctx_state_7_o_ap_vld => grp_sha256_transform_fu_295_ctx_state_7_o_ap_vld);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_grp_sha256_transform_fu_295_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_sha256_transform_fu_295_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = icmp_fu_347_p2)) or ((ap_const_lv1_1 = ap_CS_fsm_state9)))) then 
                    ap_reg_grp_sha256_transform_fu_295_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_sha256_transform_fu_295_ap_ready)) then 
                    ap_reg_grp_sha256_transform_fu_295_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ctx_bitlen_1_loc_reg_274_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_lv1_1 = ap_CS_fsm_state4)) then
                if ((ap_condition_260 = ap_const_boolean_1)) then 
                    ctx_bitlen_1_loc_reg_274 <= ctx_bitlen_1_i;
                elsif ((ap_condition_132 = ap_const_boolean_1)) then 
                    ctx_bitlen_1_loc_reg_274 <= tmp_68_fu_408_p2;
                end if;
            end if; 
        end if;
    end process;

    i_0_in_reg_265_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)) and not((tmp_fu_324_p2 = ap_const_lv1_0)))) then 
                i_0_in_reg_265 <= ctx_datalen;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state5) and (ap_const_lv1_0 = exitcond_fu_517_p2))) then 
                i_0_in_reg_265 <= i_5_fu_510_p2;
            end if; 
        end if;
    end process;

    i_1_in_reg_245_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)) and (tmp_fu_324_p2 = ap_const_lv1_0))) then 
                i_1_in_reg_245 <= ctx_datalen;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state2) and not((ap_const_lv1_0 = icmp_fu_347_p2)))) then 
                i_1_in_reg_245 <= i_1_fu_330_p2;
            end if; 
        end if;
    end process;

    i_2_reg_283_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
                i_2_reg_283 <= i_6_reg_874;
            elsif ((not((ap_const_logic_0 = grp_sha256_transform_fu_295_ap_done)) and (ap_const_lv1_1 = ap_CS_fsm_state10))) then 
                i_2_reg_283 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    j_reg_254_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and (tmp_reg_790 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_s_fu_358_p2))) then 
                j_reg_254 <= j_2_fu_364_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state3) and not((ap_const_logic_0 = grp_sha256_transform_fu_295_ap_done)))) then 
                j_reg_254 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state11))) then
                    i_2_cast1_reg_866(2 downto 0) <= i_2_cast1_fu_561_p1(2 downto 0);
                    i_2_cast2_reg_861(2 downto 0) <= i_2_cast2_fu_557_p1(2 downto 0);
                i_6_reg_874 <= i_6_fu_571_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state11) and (ap_const_lv1_0 = tmp_78_fu_565_p2))) then
                    sum1_reg_895(2 downto 0) <= sum1_fu_640_p3(2 downto 0);
                sum2_reg_889 <= sum2_fu_614_p2;
                    tmp_103_cast_reg_879(4 downto 3) <= tmp_103_cast_fu_595_p1(4 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state13))) then
                tmp_103_reg_900 <= tmp_103_fu_749_p1;
                tmp_104_reg_905 <= tmp_104_fu_762_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and (not((tmp_reg_790 = ap_const_lv1_0)) or not((ap_const_lv1_0 = tmp_s_fu_358_p2))))) then
                tmp_72_reg_823 <= tmp_86_cast3_fu_454_p2(23 downto 16);
                tmp_73_reg_828 <= tmp_69_fu_448_p2(31 downto 24);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state6))) then
                tmp_74_reg_846 <= ctx_bitlen_1_loc_reg_274(15 downto 8);
                tmp_76_reg_851 <= ctx_bitlen_1_loc_reg_274(23 downto 16);
                tmp_77_reg_856 <= ctx_bitlen_1_loc_reg_274(31 downto 24);
                tmp_93_reg_841 <= tmp_93_fu_523_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then
                tmp_reg_790 <= tmp_fu_324_p2;
            end if;
        end if;
    end process;
    i_2_cast2_reg_861(31 downto 3) <= "00000000000000000000000000000";
    i_2_cast1_reg_866(4 downto 3) <= "00";
    tmp_103_cast_reg_879(2 downto 0) <= "000";
    tmp_103_cast_reg_879(31 downto 5) <= "000000000000000000000000000";
    sum1_reg_895(3) <= '1';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, tmp_fu_324_p2, tmp_reg_790, tmp_s_fu_358_p2, tmp_78_fu_565_p2, grp_sha256_transform_fu_295_ap_done, icmp_fu_347_p2, exitcond_fu_517_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not((ap_start = ap_const_logic_0)) and not((tmp_fu_324_p2 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                elsif ((not((ap_start = ap_const_logic_0)) and (tmp_fu_324_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (not((ap_const_lv1_0 = icmp_fu_347_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (not((ap_const_logic_0 = grp_sha256_transform_fu_295_ap_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if ((not((tmp_reg_790 = ap_const_lv1_0)) or not((ap_const_lv1_0 = tmp_s_fu_358_p2)))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (not((ap_const_lv1_0 = exitcond_fu_517_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (not((ap_const_logic_0 = grp_sha256_transform_fu_295_ap_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if (not((ap_const_lv1_0 = tmp_78_fu_565_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9 downto 9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10 downto 10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11 downto 11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12 downto 12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13 downto 13);
    ap_CS_fsm_state2 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8 downto 8);

    ap_condition_132_assign_proc : process(tmp_reg_790, tmp_s_fu_358_p2, tmp_67_fu_398_p2)
    begin
                ap_condition_132 <= ((not((tmp_reg_790 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_67_fu_398_p2))) or (not((ap_const_lv1_0 = tmp_s_fu_358_p2)) and not((ap_const_lv1_0 = tmp_67_fu_398_p2))));
    end process;


    ap_condition_260_assign_proc : process(tmp_reg_790, tmp_s_fu_358_p2, tmp_67_fu_398_p2)
    begin
                ap_condition_260 <= ((not((tmp_reg_790 = ap_const_lv1_0)) and (ap_const_lv1_0 = tmp_67_fu_398_p2)) or (not((ap_const_lv1_0 = tmp_s_fu_358_p2)) and (ap_const_lv1_0 = tmp_67_fu_398_p2)));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state11, tmp_78_fu_565_p2)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1)) or ((ap_const_lv1_1 = ap_CS_fsm_state11) and not((ap_const_lv1_0 = tmp_78_fu_565_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state11, tmp_78_fu_565_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state11) and not((ap_const_lv1_0 = tmp_78_fu_565_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ctx_bitlen_0_o_assign_proc : process(ctx_bitlen_0_i, tmp_reg_790, ap_CS_fsm_state4, tmp_s_fu_358_p2, tmp_69_fu_448_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state4) and (not((tmp_reg_790 = ap_const_lv1_0)) or not((ap_const_lv1_0 = tmp_s_fu_358_p2))))) then 
            ctx_bitlen_0_o <= tmp_69_fu_448_p2;
        else 
            ctx_bitlen_0_o <= ctx_bitlen_0_i;
        end if; 
    end process;


    ctx_bitlen_0_o_ap_vld_assign_proc : process(tmp_reg_790, ap_CS_fsm_state4, tmp_s_fu_358_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state4) and (not((tmp_reg_790 = ap_const_lv1_0)) or not((ap_const_lv1_0 = tmp_s_fu_358_p2))))) then 
            ctx_bitlen_0_o_ap_vld <= ap_const_logic_1;
        else 
            ctx_bitlen_0_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    ctx_bitlen_1_o_assign_proc : process(ctx_bitlen_1_i, tmp_reg_790, ap_CS_fsm_state4, tmp_s_fu_358_p2, tmp_68_fu_408_p2, tmp_67_fu_398_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state4) and ((not((tmp_reg_790 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_67_fu_398_p2))) or (not((ap_const_lv1_0 = tmp_s_fu_358_p2)) and not((ap_const_lv1_0 = tmp_67_fu_398_p2)))))) then 
            ctx_bitlen_1_o <= tmp_68_fu_408_p2;
        else 
            ctx_bitlen_1_o <= ctx_bitlen_1_i;
        end if; 
    end process;


    ctx_bitlen_1_o_ap_vld_assign_proc : process(tmp_reg_790, ap_CS_fsm_state4, tmp_s_fu_358_p2, tmp_67_fu_398_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state4) and ((not((tmp_reg_790 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_67_fu_398_p2))) or (not((ap_const_lv1_0 = tmp_s_fu_358_p2)) and not((ap_const_lv1_0 = tmp_67_fu_398_p2)))))) then 
            ctx_bitlen_1_o_ap_vld <= ap_const_logic_1;
        else 
            ctx_bitlen_1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    ctx_in_data_address0_assign_proc : process(ap_CS_fsm_state1, ctx_datalen, tmp_reg_790, i_1_fu_330_p2, ap_CS_fsm_state2, ap_CS_fsm_state4, tmp_s_fu_358_p2, ap_CS_fsm_state6, grp_sha256_transform_fu_295_data_transform_address0, icmp_fu_347_p2, ap_CS_fsm_state3, ap_CS_fsm_state10, j_cast5_fu_353_p1, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            ctx_in_data_address0 <= ap_const_lv6_38;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
            ctx_in_data_address0 <= ap_const_lv6_3A;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state6))) then 
            ctx_in_data_address0 <= ap_const_lv6_3C;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state4) and (not((tmp_reg_790 = ap_const_lv1_0)) or not((ap_const_lv1_0 = tmp_s_fu_358_p2))))) then 
            ctx_in_data_address0 <= ap_const_lv6_3F;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state4) and (tmp_reg_790 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_s_fu_358_p2))) then 
            ctx_in_data_address0 <= j_cast5_fu_353_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state2) and not((ap_const_lv1_0 = icmp_fu_347_p2)))) then 
            ctx_in_data_address0 <= i_1_fu_330_p2(6 - 1 downto 0);
        elsif (((ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ctx_in_data_address0 <= ctx_datalen(6 - 1 downto 0);
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state3)) or ((ap_const_lv1_1 = ap_CS_fsm_state10)))) then 
            ctx_in_data_address0 <= grp_sha256_transform_fu_295_data_transform_address0;
        else 
            ctx_in_data_address0 <= "XXXXXX";
        end if; 
    end process;


    ctx_in_data_address1_assign_proc : process(ap_CS_fsm_state4, i_5_fu_510_p2, ap_CS_fsm_state5, ap_CS_fsm_state6, grp_sha256_transform_fu_295_data_transform_address1, ap_CS_fsm_state3, ap_CS_fsm_state10, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            ctx_in_data_address1 <= ap_const_lv6_39;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
            ctx_in_data_address1 <= ap_const_lv6_3B;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state6))) then 
            ctx_in_data_address1 <= ap_const_lv6_3D;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state5))) then 
            ctx_in_data_address1 <= i_5_fu_510_p2(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state4))) then 
            ctx_in_data_address1 <= ap_const_lv6_3E;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state3)) or ((ap_const_lv1_1 = ap_CS_fsm_state10)))) then 
            ctx_in_data_address1 <= grp_sha256_transform_fu_295_data_transform_address1;
        else 
            ctx_in_data_address1 <= "XXXXXX";
        end if; 
    end process;


    ctx_in_data_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, tmp_reg_790, ap_CS_fsm_state2, ap_CS_fsm_state4, tmp_s_fu_358_p2, ap_CS_fsm_state6, grp_sha256_transform_fu_295_data_transform_ce0, icmp_fu_347_p2, ap_CS_fsm_state3, ap_CS_fsm_state10, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if ((((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_state4) and (not((tmp_reg_790 = ap_const_lv1_0)) or not((ap_const_lv1_0 = tmp_s_fu_358_p2)))) or ((ap_const_lv1_1 = ap_CS_fsm_state6)) or ((ap_const_lv1_1 = ap_CS_fsm_state2) and not((ap_const_lv1_0 = icmp_fu_347_p2))) or ((ap_const_lv1_1 = ap_CS_fsm_state4) and (tmp_reg_790 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_s_fu_358_p2)) or ((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state8)))) then 
            ctx_in_data_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state3)) or ((ap_const_lv1_1 = ap_CS_fsm_state10)))) then 
            ctx_in_data_ce0 <= grp_sha256_transform_fu_295_data_transform_ce0;
        else 
            ctx_in_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_in_data_ce1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, grp_sha256_transform_fu_295_data_transform_ce1, ap_CS_fsm_state3, ap_CS_fsm_state10, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state4)) or ((ap_const_lv1_1 = ap_CS_fsm_state5)) or ((ap_const_lv1_1 = ap_CS_fsm_state6)) or ((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state8)))) then 
            ctx_in_data_ce1 <= ap_const_logic_1;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state3)) or ((ap_const_lv1_1 = ap_CS_fsm_state10)))) then 
            ctx_in_data_ce1 <= grp_sha256_transform_fu_295_data_transform_ce1;
        else 
            ctx_in_data_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_in_data_d0_assign_proc : process(ap_CS_fsm_state1, tmp_reg_790, ap_CS_fsm_state2, ap_CS_fsm_state4, tmp_s_fu_358_p2, tmp_73_reg_828, ap_CS_fsm_state6, tmp_74_reg_846, tmp_77_reg_856, icmp_fu_347_p2, tmp_70_fu_472_p2, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            ctx_in_data_d0 <= tmp_77_reg_856;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
            ctx_in_data_d0 <= tmp_74_reg_846;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state6))) then 
            ctx_in_data_d0 <= tmp_73_reg_828;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state4) and (not((tmp_reg_790 = ap_const_lv1_0)) or not((ap_const_lv1_0 = tmp_s_fu_358_p2))))) then 
            ctx_in_data_d0 <= tmp_70_fu_472_p2;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state2) and not((ap_const_lv1_0 = icmp_fu_347_p2))) or ((ap_const_lv1_1 = ap_CS_fsm_state4) and (tmp_reg_790 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_s_fu_358_p2)))) then 
            ctx_in_data_d0 <= ap_const_lv8_0;
        elsif (((ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ctx_in_data_d0 <= ap_const_lv8_80;
        else 
            ctx_in_data_d0 <= "XXXXXXXX";
        end if; 
    end process;


    ctx_in_data_d1_assign_proc : process(ap_CS_fsm_state4, tmp_72_reg_823, ap_CS_fsm_state5, tmp_93_reg_841, ap_CS_fsm_state6, tmp_76_reg_851, ap_CS_fsm_state7, ap_CS_fsm_state8, tmp_86_cast_fu_460_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            ctx_in_data_d1 <= tmp_76_reg_851;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
            ctx_in_data_d1 <= tmp_93_reg_841;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state6))) then 
            ctx_in_data_d1 <= tmp_72_reg_823;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state5))) then 
            ctx_in_data_d1 <= ap_const_lv8_0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state4))) then 
            ctx_in_data_d1 <= tmp_86_cast_fu_460_p2(15 downto 8);
        else 
            ctx_in_data_d1 <= "XXXXXXXX";
        end if; 
    end process;


    ctx_in_data_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, tmp_reg_790, ap_CS_fsm_state2, ap_CS_fsm_state4, tmp_s_fu_358_p2, ap_CS_fsm_state6, icmp_fu_347_p2, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if ((((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_state4) and (not((tmp_reg_790 = ap_const_lv1_0)) or not((ap_const_lv1_0 = tmp_s_fu_358_p2)))) or ((ap_const_lv1_1 = ap_CS_fsm_state6)) or ((ap_const_lv1_1 = ap_CS_fsm_state2) and not((ap_const_lv1_0 = icmp_fu_347_p2))) or ((ap_const_lv1_1 = ap_CS_fsm_state4) and (tmp_reg_790 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_s_fu_358_p2)) or ((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state8)))) then 
            ctx_in_data_we0 <= ap_const_logic_1;
        else 
            ctx_in_data_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_in_data_we1_assign_proc : process(tmp_reg_790, ap_CS_fsm_state4, tmp_s_fu_358_p2, ap_CS_fsm_state5, ap_CS_fsm_state6, exitcond_fu_517_p2, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state4) and (not((tmp_reg_790 = ap_const_lv1_0)) or not((ap_const_lv1_0 = tmp_s_fu_358_p2)))) or ((ap_const_lv1_1 = ap_CS_fsm_state6)) or ((ap_const_lv1_1 = ap_CS_fsm_state5) and (ap_const_lv1_0 = exitcond_fu_517_p2)) or ((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state8)))) then 
            ctx_in_data_we1 <= ap_const_logic_1;
        else 
            ctx_in_data_we1 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_state_0_o_assign_proc : process(ctx_state_0_i, grp_sha256_transform_fu_295_ctx_state_0_o, grp_sha256_transform_fu_295_ctx_state_0_o_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state10)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = grp_sha256_transform_fu_295_ctx_state_0_o_ap_vld)) or ((ap_const_lv1_1 = ap_CS_fsm_state10) and (ap_const_logic_1 = grp_sha256_transform_fu_295_ctx_state_0_o_ap_vld)))) then 
            ctx_state_0_o <= grp_sha256_transform_fu_295_ctx_state_0_o;
        else 
            ctx_state_0_o <= ctx_state_0_i;
        end if; 
    end process;


    ctx_state_0_o_ap_vld_assign_proc : process(grp_sha256_transform_fu_295_ctx_state_0_o_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state10)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state3)) or ((ap_const_lv1_1 = ap_CS_fsm_state10)))) then 
            ctx_state_0_o_ap_vld <= grp_sha256_transform_fu_295_ctx_state_0_o_ap_vld;
        else 
            ctx_state_0_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    ctx_state_1_o_assign_proc : process(ctx_state_1_i, grp_sha256_transform_fu_295_ctx_state_1_o, grp_sha256_transform_fu_295_ctx_state_1_o_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state10)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = grp_sha256_transform_fu_295_ctx_state_1_o_ap_vld)) or ((ap_const_lv1_1 = ap_CS_fsm_state10) and (ap_const_logic_1 = grp_sha256_transform_fu_295_ctx_state_1_o_ap_vld)))) then 
            ctx_state_1_o <= grp_sha256_transform_fu_295_ctx_state_1_o;
        else 
            ctx_state_1_o <= ctx_state_1_i;
        end if; 
    end process;


    ctx_state_1_o_ap_vld_assign_proc : process(grp_sha256_transform_fu_295_ctx_state_1_o_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state10)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state3)) or ((ap_const_lv1_1 = ap_CS_fsm_state10)))) then 
            ctx_state_1_o_ap_vld <= grp_sha256_transform_fu_295_ctx_state_1_o_ap_vld;
        else 
            ctx_state_1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    ctx_state_2_o_assign_proc : process(ctx_state_2_i, grp_sha256_transform_fu_295_ctx_state_2_o, grp_sha256_transform_fu_295_ctx_state_2_o_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state10)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = grp_sha256_transform_fu_295_ctx_state_2_o_ap_vld)) or ((ap_const_lv1_1 = ap_CS_fsm_state10) and (ap_const_logic_1 = grp_sha256_transform_fu_295_ctx_state_2_o_ap_vld)))) then 
            ctx_state_2_o <= grp_sha256_transform_fu_295_ctx_state_2_o;
        else 
            ctx_state_2_o <= ctx_state_2_i;
        end if; 
    end process;


    ctx_state_2_o_ap_vld_assign_proc : process(grp_sha256_transform_fu_295_ctx_state_2_o_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state10)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state3)) or ((ap_const_lv1_1 = ap_CS_fsm_state10)))) then 
            ctx_state_2_o_ap_vld <= grp_sha256_transform_fu_295_ctx_state_2_o_ap_vld;
        else 
            ctx_state_2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    ctx_state_3_o_assign_proc : process(ctx_state_3_i, grp_sha256_transform_fu_295_ctx_state_3_o, grp_sha256_transform_fu_295_ctx_state_3_o_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state10)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = grp_sha256_transform_fu_295_ctx_state_3_o_ap_vld)) or ((ap_const_lv1_1 = ap_CS_fsm_state10) and (ap_const_logic_1 = grp_sha256_transform_fu_295_ctx_state_3_o_ap_vld)))) then 
            ctx_state_3_o <= grp_sha256_transform_fu_295_ctx_state_3_o;
        else 
            ctx_state_3_o <= ctx_state_3_i;
        end if; 
    end process;


    ctx_state_3_o_ap_vld_assign_proc : process(grp_sha256_transform_fu_295_ctx_state_3_o_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state10)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state3)) or ((ap_const_lv1_1 = ap_CS_fsm_state10)))) then 
            ctx_state_3_o_ap_vld <= grp_sha256_transform_fu_295_ctx_state_3_o_ap_vld;
        else 
            ctx_state_3_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    ctx_state_4_o_assign_proc : process(ctx_state_4_i, grp_sha256_transform_fu_295_ctx_state_4_o, grp_sha256_transform_fu_295_ctx_state_4_o_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state10)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = grp_sha256_transform_fu_295_ctx_state_4_o_ap_vld)) or ((ap_const_lv1_1 = ap_CS_fsm_state10) and (ap_const_logic_1 = grp_sha256_transform_fu_295_ctx_state_4_o_ap_vld)))) then 
            ctx_state_4_o <= grp_sha256_transform_fu_295_ctx_state_4_o;
        else 
            ctx_state_4_o <= ctx_state_4_i;
        end if; 
    end process;


    ctx_state_4_o_ap_vld_assign_proc : process(grp_sha256_transform_fu_295_ctx_state_4_o_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state10)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state3)) or ((ap_const_lv1_1 = ap_CS_fsm_state10)))) then 
            ctx_state_4_o_ap_vld <= grp_sha256_transform_fu_295_ctx_state_4_o_ap_vld;
        else 
            ctx_state_4_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    ctx_state_5_o_assign_proc : process(ctx_state_5_i, grp_sha256_transform_fu_295_ctx_state_5_o, grp_sha256_transform_fu_295_ctx_state_5_o_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state10)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = grp_sha256_transform_fu_295_ctx_state_5_o_ap_vld)) or ((ap_const_lv1_1 = ap_CS_fsm_state10) and (ap_const_logic_1 = grp_sha256_transform_fu_295_ctx_state_5_o_ap_vld)))) then 
            ctx_state_5_o <= grp_sha256_transform_fu_295_ctx_state_5_o;
        else 
            ctx_state_5_o <= ctx_state_5_i;
        end if; 
    end process;


    ctx_state_5_o_ap_vld_assign_proc : process(grp_sha256_transform_fu_295_ctx_state_5_o_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state10)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state3)) or ((ap_const_lv1_1 = ap_CS_fsm_state10)))) then 
            ctx_state_5_o_ap_vld <= grp_sha256_transform_fu_295_ctx_state_5_o_ap_vld;
        else 
            ctx_state_5_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    ctx_state_6_o_assign_proc : process(ctx_state_6_i, grp_sha256_transform_fu_295_ctx_state_6_o, grp_sha256_transform_fu_295_ctx_state_6_o_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state10)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = grp_sha256_transform_fu_295_ctx_state_6_o_ap_vld)) or ((ap_const_lv1_1 = ap_CS_fsm_state10) and (ap_const_logic_1 = grp_sha256_transform_fu_295_ctx_state_6_o_ap_vld)))) then 
            ctx_state_6_o <= grp_sha256_transform_fu_295_ctx_state_6_o;
        else 
            ctx_state_6_o <= ctx_state_6_i;
        end if; 
    end process;


    ctx_state_6_o_ap_vld_assign_proc : process(grp_sha256_transform_fu_295_ctx_state_6_o_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state10)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state3)) or ((ap_const_lv1_1 = ap_CS_fsm_state10)))) then 
            ctx_state_6_o_ap_vld <= grp_sha256_transform_fu_295_ctx_state_6_o_ap_vld;
        else 
            ctx_state_6_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    ctx_state_7_o_assign_proc : process(ctx_state_7_i, grp_sha256_transform_fu_295_ctx_state_7_o, grp_sha256_transform_fu_295_ctx_state_7_o_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state10)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = grp_sha256_transform_fu_295_ctx_state_7_o_ap_vld)) or ((ap_const_lv1_1 = ap_CS_fsm_state10) and (ap_const_logic_1 = grp_sha256_transform_fu_295_ctx_state_7_o_ap_vld)))) then 
            ctx_state_7_o <= grp_sha256_transform_fu_295_ctx_state_7_o;
        else 
            ctx_state_7_o <= ctx_state_7_i;
        end if; 
    end process;


    ctx_state_7_o_ap_vld_assign_proc : process(grp_sha256_transform_fu_295_ctx_state_7_o_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state10)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state3)) or ((ap_const_lv1_1 = ap_CS_fsm_state10)))) then 
            ctx_state_7_o_ap_vld <= grp_sha256_transform_fu_295_ctx_state_7_o_ap_vld;
        else 
            ctx_state_7_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_fu_517_p2 <= "1" when (i_0_in_reg_265 = ap_const_lv32_37) else "0";

    final_hash_address0_assign_proc : process(i_2_cast2_reg_861, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state14, sum2_cast_fu_620_p1, ap_CS_fsm_state12, sum8_cast_fu_711_p1, sum1_cast_fu_769_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            final_hash_address0 <= sum1_cast_fu_769_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            final_hash_address0 <= sum8_cast_fu_711_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            final_hash_address0 <= i_2_cast2_reg_861(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state11))) then 
            final_hash_address0 <= sum2_cast_fu_620_p1(5 - 1 downto 0);
        else 
            final_hash_address0 <= "XXXXX";
        end if; 
    end process;


    final_hash_address1_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state14, sum4_cast_fu_648_p1, ap_CS_fsm_state12, sum6_cast_fu_684_p1, sum_cast_fu_735_p1, sum3_cast_fu_777_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            final_hash_address1 <= sum3_cast_fu_777_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            final_hash_address1 <= sum_cast_fu_735_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            final_hash_address1 <= sum6_cast_fu_684_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state11))) then 
            final_hash_address1 <= sum4_cast_fu_648_p1(5 - 1 downto 0);
        else 
            final_hash_address1 <= "XXXXX";
        end if; 
    end process;


    final_hash_ce0_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state12)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_state13)) or ((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state12)))) then 
            final_hash_ce0 <= ap_const_logic_1;
        else 
            final_hash_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    final_hash_ce1_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state12)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_state13)) or ((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state12)))) then 
            final_hash_ce1 <= ap_const_logic_1;
        else 
            final_hash_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    final_hash_d0_assign_proc : process(ap_CS_fsm_state11, tmp_103_reg_900, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state12, tmp_98_fu_609_p1, tmp_97_fu_662_p1, tmp_101_fu_698_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            final_hash_d0 <= tmp_103_reg_900;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            final_hash_d0 <= tmp_101_fu_698_p1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            final_hash_d0 <= tmp_97_fu_662_p1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state11))) then 
            final_hash_d0 <= tmp_98_fu_609_p1;
        else 
            final_hash_d0 <= "XXXXXXXX";
        end if; 
    end process;


    final_hash_d1_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state13, tmp_104_reg_905, ap_CS_fsm_state14, ap_CS_fsm_state12, tmp_99_fu_635_p1, tmp_100_fu_676_p1, tmp_102_fu_725_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            final_hash_d1 <= tmp_104_reg_905;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            final_hash_d1 <= tmp_102_fu_725_p1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            final_hash_d1 <= tmp_100_fu_676_p1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state11))) then 
            final_hash_d1 <= tmp_99_fu_635_p1;
        else 
            final_hash_d1 <= "XXXXXXXX";
        end if; 
    end process;


    final_hash_we0_assign_proc : process(ap_CS_fsm_state11, tmp_78_fu_565_p2, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state12)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state11) and (ap_const_lv1_0 = tmp_78_fu_565_p2)) or ((ap_const_lv1_1 = ap_CS_fsm_state13)) or ((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state12)))) then 
            final_hash_we0 <= ap_const_logic_1;
        else 
            final_hash_we0 <= ap_const_logic_0;
        end if; 
    end process;


    final_hash_we1_assign_proc : process(ap_CS_fsm_state11, tmp_78_fu_565_p2, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state12)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state11) and (ap_const_lv1_0 = tmp_78_fu_565_p2)) or ((ap_const_lv1_1 = ap_CS_fsm_state13)) or ((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state12)))) then 
            final_hash_we1 <= ap_const_logic_1;
        else 
            final_hash_we1 <= ap_const_logic_0;
        end if; 
    end process;

    grp_sha256_transform_fu_295_ap_start <= ap_reg_grp_sha256_transform_fu_295_ap_start;
    i_1_fu_330_p2 <= std_logic_vector(unsigned(i_1_in_reg_245) + unsigned(ap_const_lv32_1));
    i_2_cast1_fu_561_p1 <= std_logic_vector(resize(unsigned(i_2_reg_283),5));
    i_2_cast2_fu_557_p1 <= std_logic_vector(resize(unsigned(i_2_reg_283),32));
    i_5_fu_510_p2 <= std_logic_vector(unsigned(i_0_in_reg_265) + unsigned(ap_const_lv32_1));
    i_6_fu_571_p2 <= std_logic_vector(unsigned(i_2_reg_283) + unsigned(ap_const_lv3_1));
    icmp_fu_347_p2 <= "1" when (tmp_75_fu_337_p4 = ap_const_lv26_0) else "0";
    j_2_fu_364_p2 <= std_logic_vector(unsigned(j_reg_254) + unsigned(ap_const_lv6_1));
    j_cast5_fu_353_p1 <= std_logic_vector(resize(unsigned(j_reg_254),32));
        sum1_cast7_fu_766_p1 <= std_logic_vector(resize(signed(sum1_reg_895),5));

    sum1_cast_fu_769_p1 <= std_logic_vector(resize(unsigned(sum1_cast7_fu_766_p1),32));
    sum1_fu_640_p3 <= (ap_const_lv1_1 & i_2_reg_283);
    sum2_cast_fu_620_p1 <= std_logic_vector(resize(unsigned(sum2_fu_614_p2),32));
    sum2_fu_614_p2 <= (i_2_reg_283 xor ap_const_lv3_4);
        sum3_cast6_fu_774_p1 <= std_logic_vector(resize(signed(sum2_reg_889),5));

    sum3_cast_fu_777_p1 <= std_logic_vector(resize(unsigned(sum3_cast6_fu_774_p1),32));
    sum4_cast_fu_648_p1 <= std_logic_vector(resize(unsigned(sum1_fu_640_p3),32));
    sum4_fu_703_p3 <= (ap_const_lv2_2 & i_2_reg_283);
        sum6_cast8_fu_681_p1 <= std_logic_vector(resize(signed(sum2_reg_889),4));

    sum6_cast_fu_684_p1 <= std_logic_vector(resize(unsigned(sum6_cast8_fu_681_p1),32));
    sum8_cast_fu_711_p1 <= std_logic_vector(resize(unsigned(sum4_fu_703_p3),32));
    sum_cast_fu_735_p1 <= std_logic_vector(resize(unsigned(sum_fu_730_p2),32));
    sum_fu_730_p2 <= std_logic_vector(signed(ap_const_lv5_14) + signed(i_2_cast1_reg_866));
    tmp_100_fu_676_p1 <= tmp_86_fu_671_p2(8 - 1 downto 0);
    tmp_101_fu_698_p1 <= tmp_88_fu_693_p2(8 - 1 downto 0);
    tmp_102_fu_725_p1 <= tmp_90_fu_720_p2(8 - 1 downto 0);
    tmp_103_cast_fu_595_p1 <= std_logic_vector(resize(unsigned(tmp_80_fu_589_p2),32));
    tmp_103_fu_749_p1 <= tmp_92_fu_744_p2(8 - 1 downto 0);
    tmp_104_fu_762_p1 <= tmp_94_fu_757_p2(8 - 1 downto 0);
    tmp_12_fu_420_p3 <= (tmp_85_fu_377_p1 & ap_const_lv3_0);
    tmp_15_fu_436_p1 <= std_logic_vector(resize(unsigned(tmp_65_fu_380_p3),16));
    tmp_17_fu_444_p1 <= std_logic_vector(resize(unsigned(tmp_65_fu_380_p3),24));
    tmp_65_fu_380_p3 <= (tmp_83_fu_374_p1 & ap_const_lv3_0);
    tmp_66_fu_392_p2 <= (tmp_82_cast_fu_388_p1 xor ap_const_lv32_FFFFFFFF);
    tmp_67_fu_398_p2 <= "1" when (unsigned(ctx_bitlen_0_i) > unsigned(tmp_66_fu_392_p2)) else "0";
    tmp_68_fu_408_p2 <= std_logic_vector(unsigned(ctx_bitlen_1_i) + unsigned(ap_const_lv32_1));
    tmp_69_fu_448_p2 <= std_logic_vector(unsigned(tmp_82_cast_fu_388_p1) + unsigned(ctx_bitlen_0_i));
    tmp_70_fu_472_p2 <= std_logic_vector(unsigned(tmp_87_fu_428_p1) + unsigned(tmp_12_fu_420_p3));
    tmp_75_fu_337_p4 <= i_1_fu_330_p2(31 downto 6);
    tmp_78_fu_565_p2 <= "1" when (i_2_reg_283 = ap_const_lv3_4) else "0";
    tmp_79_fu_581_p3 <= (tmp_95_fu_577_p1 & ap_const_lv3_0);
    tmp_80_fu_589_p2 <= std_logic_vector(signed(ap_const_lv5_18) - signed(tmp_79_fu_581_p3));
    tmp_81_fu_657_p2 <= std_logic_vector(shift_right(unsigned(ctx_state_0_i),to_integer(unsigned('0' & tmp_103_cast_reg_879(31-1 downto 0)))));
    tmp_82_cast_fu_388_p1 <= std_logic_vector(resize(unsigned(tmp_65_fu_380_p3),32));
    tmp_82_fu_603_p2 <= std_logic_vector(shift_right(unsigned(ctx_state_1_i),to_integer(unsigned('0' & tmp_103_cast_fu_595_p1(31-1 downto 0)))));
    tmp_83_fu_374_p1 <= ctx_datalen(6 - 1 downto 0);
    tmp_84_fu_629_p2 <= std_logic_vector(shift_right(unsigned(ctx_state_2_i),to_integer(unsigned('0' & tmp_103_cast_fu_595_p1(31-1 downto 0)))));
    tmp_85_fu_377_p1 <= ctx_datalen(5 - 1 downto 0);
    tmp_86_cast3_fu_454_p2 <= std_logic_vector(unsigned(tmp_91_fu_440_p1) + unsigned(tmp_17_fu_444_p1));
    tmp_86_cast_fu_460_p2 <= std_logic_vector(unsigned(tmp_89_fu_432_p1) + unsigned(tmp_15_fu_436_p1));
    tmp_86_fu_671_p2 <= std_logic_vector(shift_right(unsigned(ctx_state_3_i),to_integer(unsigned('0' & tmp_103_cast_reg_879(31-1 downto 0)))));
    tmp_87_fu_428_p1 <= ctx_bitlen_0_i(8 - 1 downto 0);
    tmp_88_fu_693_p2 <= std_logic_vector(shift_right(unsigned(ctx_state_4_i),to_integer(unsigned('0' & tmp_103_cast_reg_879(31-1 downto 0)))));
    tmp_89_fu_432_p1 <= ctx_bitlen_0_i(16 - 1 downto 0);
    tmp_90_fu_720_p2 <= std_logic_vector(shift_right(unsigned(ctx_state_5_i),to_integer(unsigned('0' & tmp_103_cast_reg_879(31-1 downto 0)))));
    tmp_91_fu_440_p1 <= ctx_bitlen_0_i(24 - 1 downto 0);
    tmp_92_fu_744_p2 <= std_logic_vector(shift_right(unsigned(ctx_state_6_i),to_integer(unsigned('0' & tmp_103_cast_reg_879(31-1 downto 0)))));
    tmp_93_fu_523_p1 <= ctx_bitlen_1_loc_reg_274(8 - 1 downto 0);
    tmp_94_fu_757_p2 <= std_logic_vector(shift_right(unsigned(ctx_state_7_i),to_integer(unsigned('0' & tmp_103_cast_reg_879(31-1 downto 0)))));
    tmp_95_fu_577_p1 <= i_2_reg_283(2 - 1 downto 0);
    tmp_97_fu_662_p1 <= tmp_81_fu_657_p2(8 - 1 downto 0);
    tmp_98_fu_609_p1 <= tmp_82_fu_603_p2(8 - 1 downto 0);
    tmp_99_fu_635_p1 <= tmp_84_fu_629_p2(8 - 1 downto 0);
    tmp_fu_324_p2 <= "1" when (unsigned(ctx_datalen) < unsigned(ap_const_lv32_38)) else "0";
    tmp_s_fu_358_p2 <= "1" when (j_reg_254 = ap_const_lv6_38) else "0";
end behav;
